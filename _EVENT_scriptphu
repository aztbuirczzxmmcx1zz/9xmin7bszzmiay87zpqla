 
-- map 269 time trial
task.spawn(function()
wait(30)

_G.STOP_TIME_TRIAL = false

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local Save = require(ReplicatedStorage.Library.Client.Save)
local ZoneCmds = require(ReplicatedStorage.Library.Client.ZoneCmds)

local lagFlag = false
local endFlag = false
local lagMonitorThread, increaseMonitorThread, monitor12minThread

-- 🛡️ Lấy HumanoidRootPart an toàn
local function getHumanoidRootPart()
	local character = player.Character or player.CharacterAdded:Wait()
	if not character then return nil end

	local hrp = character:FindFirstChild("HumanoidRootPart")
	local waitTime = 0
	while not hrp and waitTime < 5 do
		task.wait(0.5)
		waitTime += 0.5
		hrp = character:FindFirstChild("HumanoidRootPart")
	end

	return hrp
end

-- 📊 Hàm tiện ích
local function getRunsUsed()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.DailyRuns or 0) or 0
end

local function getRunsLeft()
	return 10 - getRunsUsed()
end

local function getTimeTrialPoints()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.Points or 0) or 0
end

local function getTotalRuns()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.TotalRuns or 0) or 0
end

-- 🗺️ Teleport hỗ trợ
local function teleportTo(part)
	local hrp = getHumanoidRootPart()
	if hrp and part and part.CFrame then
		hrp.CFrame = part.CFrame + Vector3.new(0, 10, 0)
	end
end

local function teleportToRewardLocation()
	warn("🚶‍♂️ Đang teleport đến vị trí đổi quà...")
	local hrp = getHumanoidRootPart()
	if hrp then
		hrp.CFrame = CFrame.new(-14223, 20, 1387)
	end
end

local function teleportToLocation()
	warn("🚶‍♂️ Đang teleport về vị trí map 269...")
	local hrp = getHumanoidRootPart()
	if hrp then
		hrp.CFrame = CFrame.new(-14251, 20, 1336)
	end
end

local function safeTeleportOut()
	teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Leave)
	task.wait(9)
	if increaseMonitorThread then pcall(task.cancel, increaseMonitorThread) increaseMonitorThread = nil end
	if lagMonitorThread then pcall(task.cancel, lagMonitorThread) lagMonitorThread = nil end
end

-- 📺 GUI hiển thị điểm và lượt
local screenGui = playerGui:FindFirstChild("TimeTrialGui")
if not screenGui then
	screenGui = Instance.new("ScreenGui")
	screenGui.Name = "TimeTrialGui"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui
end

local function createLabel(name, position, anchor, bgColor)
	local label = Instance.new("TextLabel")
	label.Name = name
	label.AnchorPoint = anchor
	label.Position = position
	label.Size = UDim2.new(0, 0, 0, 38)
	label.BackgroundColor3 = bgColor
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.GothamBold
	label.TextSize = 32
	label.BackgroundTransparency = 0
	label.BorderSizePixel = 0
	label.TextXAlignment = Enum.TextXAlignment.Center
	label.Text = "..."
	label.Parent = screenGui
	return label
end

local function updateLabelSize(label)
	label.Size = UDim2.new(0, label.TextBounds.X + 20, 0, 38)
end

local pointsLabel = screenGui:FindFirstChild("PointsLabel") or createLabel("PointsLabel", UDim2.new(0.3, 0, 0.1, -55), Vector2.new(0, 0), Color3.fromRGB(0, 128, 255))
local timeTrialLabel = screenGui:FindFirstChild("TimeTrialLabel") or createLabel("TimeTrialLabel", UDim2.new(0.79, 0, 0.1, -55), Vector2.new(0, 0), Color3.fromRGB(128, 0, 128))

task.spawn(function()
	while true do
		pointsLabel.Text = tostring(getTimeTrialPoints())
		updateLabelSize(pointsLabel)
		timeTrialLabel.Text = tostring(getRunsLeft())
		updateLabelSize(timeTrialLabel)
		task.wait(10)
	end
end)

-- 🔍 Chờ đến khi đạt MaxZone ở map 4
local function getMaxZoneFromMap4()
	local mapFolder = workspace:FindFirstChild("Map4")
	if not mapFolder then return 0 end
	local maxZone = 0
	for _, folder in ipairs(mapFolder:GetChildren()) do
		if folder:IsA("Folder") then
			local zoneNumber = tonumber(folder.Name:match("^(%d+)"))
			if zoneNumber and zoneNumber > maxZone then
				maxZone = zoneNumber
			end
		end
	end
	return maxZone
end

local function waitUntilReachMaxZone()
	local maxMapZone = getMaxZoneFromMap4()
	while true do
		local success, data = pcall(function()
			local _, zoneData = ZoneCmds.GetMaxOwnedZone()
			return zoneData
		end)
		local current = success and data and data.ZoneNumber or 0
		if current >= maxMapZone then
			warn("✅ Đã đạt Zone tối đa (" .. tostring(current) .. ")")
			break
		end
		warn("⏳ Chưa đạt Zone tối đa (" .. tostring(current) .. "/" .. tostring(maxMapZone) .. "), đợi 60s...")
		task.wait(6000)
	end
end

-- ⏱️ Monitor 12 phút không tăng lượt
local function startMonitor12Min()
	monitor12minThread = task.spawn(function()
		while true do
			if getRunsUsed() >= 10 then
				warn("🛑 Đã đủ 10 lượt → dừng theo dõi 12 phút.")
				return
			end

			local startUsed = getRunsUsed()
			local startTotal = getTotalRuns()
			local t = 0
			while t < 720 do
				task.wait(10)
				t += 10
				if getRunsUsed() ~= startUsed or getTotalRuns() ~= startTotal then break end
				if getRunsUsed() >= 10 then return end
			end

			if getRunsUsed() == startUsed and getTotalRuns() == startTotal then
				player:Kick("⏰ 12 phút không đổi lượt hoặc tổng Time Trial → nghi ngờ treo máy.")
				return
			end
		end
	end)
end

-- 📌 Theo dõi đứng yên
local function startLagMonitor()
	lagMonitorThread = task.spawn(function()
		local retryCount = 0
		local lastPosition = nil
		while true do
			local hrp = getHumanoidRootPart()
			if not hrp then task.wait(5) continue end

			lastPosition = hrp.Position
			task.wait(60)

			local currentPos = hrp.Position
			if (lastPosition - currentPos).Magnitude < 1 then
				retryCount += 1
				warn("⚠️ Đứng im " .. retryCount .. " lần")

				if retryCount > 3 then
					player:Kick("Lag quá lâu trong Time Trial.")
					return
				else
					lagFlag = true
					safeTeleportOut()
				end
			else
				retryCount = 0
			end
			task.wait(5)
		end
	end)
end

-- 🧠 Theo dõi tăng điểm
local function startIncreaseMonitor(startPoints, startRuns)
	increaseMonitorThread = task.spawn(function()
		warn("⏳ Theo dõi tăng Điểm/TotalRuns")
		while true do
			if lagFlag then return end
			if getTimeTrialPoints() > startPoints or getTotalRuns() > startRuns then
				warn("✅ Điểm hoặc TotalRuns tăng → Thoát Time Trial")
				endFlag = true
				safeTeleportOut()
				return
			end
			task.wait(1)
		end
	end)
end

-- 🔁 Teleport farm breakables
local function teleportFarmLoop(startPoints, startRuns)
	while true do
		if lagFlag or endFlag or _G.STOP_TIME_TRIAL then
			warn("⚠️ Dừng teleportFarmLoop")
			return
		end

		-- 🔍 Kiểm tra nhân vật đã hồi sinh và có HRP chưa
		local hrp = getHumanoidRootPart()
		if not hrp then
			warn("⚠️ Không tìm thấy HumanoidRootPart → đợi hồi sinh...")
			task.wait(3)
			continue
		end

		local names = {}
		for _, c in ipairs(workspace.__THINGS.Breakables:GetChildren()) do
			if c:IsA("Model") and tonumber(c.Name) then
				table.insert(names, c.Name)
			end
		end

		if #names > 0 then
			for _, n in ipairs(names) do
				if lagFlag or endFlag or _G.STOP_TIME_TRIAL then return end
				local b = workspace.__THINGS.Breakables:FindFirstChild(n)
				if b then
					local p = b:FindFirstChildWhichIsA("BasePart")
					if p then
						teleportTo(p)
						while workspace.__THINGS.Breakables:FindFirstChild(n) do
							if lagFlag or endFlag or _G.STOP_TIME_TRIAL then return end
							task.wait(0.1)
						end
					end
				end
			end
		else
			warn("⏳ Không có rương, chờ 20s...")
			local found = false
			for i = 1, 200 do
				if lagFlag or endFlag or _G.STOP_TIME_TRIAL then return end
				task.wait(0.1)
				for _, c in ipairs(workspace.__THINGS.Breakables:GetChildren()) do
					if c:IsA("Model") and tonumber(c.Name) then
						found = true
						break
					end
				end
				if found then break end
			end
			if not found then
				warn("❌ Hết rương → kết thúc lượt")
				endFlag = true
				safeTeleportOut()
				return
			end
		end

		task.wait(0.1)
	end
end

-- 🧹 Cleanup toàn bộ threads
local function cleanupAllThreads()
	warn("🧹 Cleanup toàn bộ thread & trạng thái")
	if lagMonitorThread then pcall(task.cancel, lagMonitorThread) lagMonitorThread = nil end
	if increaseMonitorThread then pcall(task.cancel, increaseMonitorThread) increaseMonitorThread = nil end
	if monitor12minThread then pcall(task.cancel, monitor12minThread) monitor12minThread = nil end
	lagFlag = false
	endFlag = false
	_G.STOP_TIME_TRIAL = false
	_G.VAR_TIME_TRIAL = nil
end

-- 🎁 Đổi quà
local function claimReward()

if _G.VAR_STOP_BLOCK_PARTY == true then

	warn("🎁 Bắt đầu đổi quà...")

	-- 📊 Lấy điểm Time Trial
	local points = getTimeTrialPoints()
	local currentDay = os.date("*t").wday
	local isSaturday = (currentDay == 7)

	local chest3, chest2, chest1 = 0, 0, 0
	if isSaturday then
		warn("📆 Hôm nay là Thứ 7 → Đổi hết toàn bộ điểm.")
		chest3 = math.floor(points / 5000)
		points = points - chest3 * 5000

		chest2 = math.floor(points / 3000)
		points = points - chest2 * 3000

		chest1 = math.floor(points / 1000)
	else
		warn("📆 Hôm nay KHÔNG phải Thứ 7 → Chỉ đổi hộp 3, giữ điểm dư.")
		chest3 = math.floor(points / 5000)
	end

	warn("🧾 Số lần đổi quà sẽ thực hiện:")
	warn("📦 Hộp 3 (5000): " .. chest3)
	warn("📦 Hộp 2 (3000): " .. chest2)
	warn("📦 Hộp 1 (1000): " .. chest1)

	local totalChests = chest3 + chest2 + chest1
	if totalChests == 0 then
		warn("⚠️ Không có phần thưởng nào đủ điểm để đổi.")
		return
	end

	-- 📦 Gọi server để đổi hộp
	local function openChest(chestType)
		local args = { [1] = chestType }
		return ReplicatedStorage.Network.TimeTrials_OpenChest:InvokeServer(unpack(args))
	end

	-- 🔁 Đổi nhiều hộp 1 loại
	local function claimMultiple(count, chestType)
		for i = 1, count do
			warn("🔁 Đang thực hiện đổi hộp " .. chestType .. " - lần " .. i .. "...")
			local success, err = pcall(function()
				openChest(chestType)
			end)
			if success then
				warn("✅ Đổi thành công hộp " .. chestType .. " - lần " .. i)
			else
				warn("❌ Lỗi khi đổi hộp " .. chestType .. ": " .. tostring(err))
			end
			task.wait(5)
		end
	end

	-- 🗺️ Teleport tới đổi + kiểm tra vị trí bằng khoảng cách
	local function isAtExactRewardPosition()
		local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if not hrp then return false end
		local pos = hrp.Position
		local target = Vector3.new(-14223, 17.39, 1387)
		local tolerance = 2
		return (pos - target).Magnitude <= tolerance
	end

	local retry = 0
	while retry < 3 do
		retry += 1
		warn("🚶‍♂️ Teleport tới vị trí đổi quà (lần " .. retry .. ")...")
		teleportToRewardLocation()
		task.wait(9)
		if isAtExactRewardPosition() then
			warn("✅ Vị trí chính xác → bắt đầu đổi quà.")
			break
		else
			warn("❌ Vị trí sai → thử lại.")
		end
	end

	if not isAtExactRewardPosition() then
		warn("⛔ Không thể đến đúng vị trí sau 3 lần thử → bỏ qua đổi quà.")
		return
	end

	-- 🧧 Đổi quà
	claimMultiple(chest3, 3)
	claimMultiple(chest2, 2)
	claimMultiple(chest1, 1)

	task.wait(9)
	teleportToLocation()
	
end	

end

-- ✅ VÒNG LẶP CHÍNH
task.spawn(function()

	
		if game.PlaceId ~= 140403681187145 then return end

	--waitUntilReachMaxZone()
	startMonitor12Min()		
		
		
	while true do
		
		while getRunsUsed() < 10 do
			_G.VAR_STOP_BLOCK_PARTY = true
			_G.VAR_START_BLOCK_PARTY = false
			
			local used = getRunsUsed()
			lagFlag = false
			endFlag = false

			if used > 0 then
				warn("⏸️ Nghỉ 30s trước lượt tiếp theo...")
				task.wait(30)
			end

			local startPoints = getTimeTrialPoints()
			local startRuns = getTotalRuns()

			warn("🔁 Bắt đầu lượt: " .. tostring(used))
			teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Enter)
			task.wait(5)

			local retry = 0
			while not workspace.__THINGS.__INSTANCE_CONTAINER.Active:FindFirstChild("TimeTrial") and retry < 3 do
				retry += 1
				warn("❌ Vào thất bại, thử lại...")
				teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Enter)
				task.wait(5)
			end

			if not workspace.__THINGS.__INSTANCE_CONTAINER.Active:FindFirstChild("TimeTrial") then
				warn("⛔ Không thể vào Time Trial.")
				cleanupAllThreads()
				return
			end

			startLagMonitor()
			startIncreaseMonitor(startPoints, startRuns)
			teleportFarmLoop(startPoints, startRuns)
			task.wait(5)

			if lagMonitorThread then pcall(task.cancel, lagMonitorThread) lagMonitorThread = nil end
			if increaseMonitorThread then pcall(task.cancel, increaseMonitorThread) increaseMonitorThread = nil end
		end

		warn("🎉 Hoàn tất 10/10 lượt Time Trial.")
		claimReward()
		task.wait(30)
		cleanupAllThreads()
		_G.VAR_STOP_BLOCK_PARTY = false
		_G.VAR_START_BLOCK_PARTY = true
		warn("⏳ Theo dõi reset DailyRuns...")
		while getRunsUsed() >= 10 do 				
			task.wait(600) 
		end

		warn("🔁 DailyRuns reset → tiếp tục farm.")
		if monitor12minThread then pcall(task.cancel, monitor12minThread) monitor12minThread = nil end
		startMonitor12Min()
	end
end)



end)




-- xem sl 7 sách thường dùng
task.spawn(function()
task.wait(60)
local booksToCheck = {
    "Diamonds","Lucky Eggs","Treasure Hunter"
}

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local SaveData = require(ReplicatedStorage.Library.Client.Save).Get()

-- Đếm số sách TN = 10 theo tên
local function findBookAmount(bookName)
    local results = 0
    local subTable = SaveData.Inventory.Enchant
    if type(subTable) ~= "table" then return 0 end

    for _, v in pairs(subTable) do
        if typeof(v) == "table" and v.id == bookName and v.tn == 10 then
            results += tonumber(v._am) or 1
        end
    end

    return results
end

-- Tạo UI 1 hàng ngang với kích thước vuông
local function createCounterUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "BookCounterUI"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    local container = Instance.new("Frame", screenGui)
    container.Name = "Container"
    container.AnchorPoint = Vector2.new(0.5, 0)
    container.Position = UDim2.new(0.5, 0, 0.2, 0) -- Trên đầu, dưới tên người chơi
    container.Size = UDim2.new(0, 75 * #booksToCheck, 0, 75)
    container.BackgroundTransparency = 1

    for i = 1, #booksToCheck do
        local box = Instance.new("TextLabel", container)
        box.Name = "Box_" .. i
        box.Size = UDim2.new(0, 70, 0, 70)
        box.Position = UDim2.new(0, (i - 1) * 75, 0, 0)
        box.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        box.TextColor3 = Color3.new(1, 1, 1)
        box.TextStrokeTransparency = 0.1
        box.BorderSizePixel = 0
        box.TextScaled = true
        box.Font = Enum.Font.GothamBlack
        box.Text = "?"
        box.BackgroundTransparency = 0
        box.TextWrapped = true
        box.ClipsDescendants = true
    end
end

-- Cập nhật số mỗi 5s
local function updateCounterUI()
    local container = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("BookCounterUI"):WaitForChild("Container")
    for i, bookName in ipairs(booksToCheck) do
        local count = findBookAmount(bookName)
        local label = container:FindFirstChild("Box_" .. i)
        if label then
            label.Text = tostring(count)
        end
    end
end

-- Khởi động UI và cập nhật
createCounterUI()
task.spawn(function()
    while true do
        updateCounterUI()
        task.wait(5)
    end
end)


end)
---------------------------------------------------------------------------------------------------------------------

-- Xem item cần tìm x 10 ở giữa cho giả lập
task.spawn(function()
	task.wait(1)

	local Players = game:GetService("Players")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")

	local LocalPlayer = Players.LocalPlayer
	local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
	local Client = ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client")
	local SaveModule = require(Client:WaitForChild("Save"))

	local previousCounts = {}

	-- cấu hình item cần theo dõi
	local itemsToTrack = {		

		{ id = "Chest Breaker", guiName = "Item4", row = 1, col = 1, color = Color3.fromRGB(192,192,192) }, -- xams
		{ id = "Super Lightning", guiName = "Item1", row = 0, col = 0, color = Color3.fromRGB(255, 165, 0) },	-- cam
		{ id = "MVP Key Upper Half", guiName = "Item2", row = 0, col = 1, color = Color3.fromRGB(255, 255, 255) },		-- trang
	}

	local function createItemFrame(itemConfig, itemCount)
		local frameSize = 100
		local spacing = 10
		local cols = 2
		local rows = 2

		-- tính vị trí chính giữa màn hình
		local offsetX = (itemConfig.col * (frameSize + spacing)) - ((cols - 1) * (frameSize + spacing) / 2)
		local offsetY = (itemConfig.row * (frameSize + spacing)) - ((rows - 1) * (frameSize + spacing) / 2) + 80


		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = itemConfig.guiName
		screenGui.Parent = PlayerGui
		screenGui.ResetOnSpawn = false
		screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

		local frame = Instance.new("Frame")
		frame.Name = "ItemFrame"
		frame.Size = UDim2.new(0, frameSize, 0, frameSize)
		frame.Position = UDim2.new(0.75, offsetX, 1, -offsetY)
		frame.AnchorPoint = Vector2.new(0.5, 1)
		frame.BackgroundColor3 = itemConfig.color
		frame.BorderSizePixel = 2
		frame.Parent = screenGui

		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, 0, 1, 0)
		label.BackgroundTransparency = 1
		label.Text = tostring(itemCount)
		label.TextColor3 = Color3.fromRGB(0, 0, 0)
		label.TextScaled = true
		label.Font = Enum.Font.GothamBold
		label.Parent = frame
	end

	local function checkInventory()
		local inventory = SaveModule.Get().Inventory or {}
		local currentCounts = {}

		-- xóa GUI cũ
		for _, item in ipairs(itemsToTrack) do
			local oldGui = PlayerGui:FindFirstChild(item.guiName)
			if oldGui then oldGui:Destroy() end
		end

		for _, item in ipairs(itemsToTrack) do
			local count = 0
			for _, group in pairs(inventory) do
				for _, obj in pairs(group) do
					if obj.id == item.id then
						count += (obj._am or 1)
					end
				end
			end
			currentCounts[item.id] = count
			createItemFrame(item, count)
		end

		previousCounts = currentCounts
	end

	checkInventory()
	while true do
		task.wait(10)
		checkInventory()
	end
end)

-- Ghép sách + thuốc nếu lv < 99 
task.spawn(function()
	task.wait(150)
local Save = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local level = Save.Get().Mastery and Save.Get().Mastery.Potions

if level and level < 13034430 then

    -- Hàm nâng cấp thuốc
    local function _update_sach_theo_level(name_sach, level_sach)
        local saveModule = require(game.ReplicatedStorage.Library.Client.Save)
        local inventory = saveModule.Get() and saveModule.Get().Inventory and saveModule.Get().Inventory.Potion
        if not inventory then return end

        local count = 0
        local uid_sach = nil

        for itemUID, itemData in pairs(inventory) do
            if itemData.id == name_sach and itemData.tn == level_sach then
                count += (itemData._am or 1)
                uid_sach = tostring(itemUID)
            end
        end

        local totalUpgradeAmount = count // 3
        if uid_sach and totalUpgradeAmount > 0 then
            game:GetService("ReplicatedStorage").Network.UpgradePotionsMachine_Activate:InvokeServer(uid_sach, totalUpgradeAmount)
            warn("Upgrade: " .. name_sach .. " UID : " .. uid_sach .. " x" .. totalUpgradeAmount .. "\n")
        end
    end

    -- Danh sách sách cần nâng cấp
    local list = {
        "Treasure Hunter", "Walkspeed", "Strong Pets", 
        "Lucky Eggs", "Diamonds", "Coins"
    }

    for _, name in ipairs(list) do
        _update_sach_theo_level(name, 1)
		task.wait(2)
        _update_sach_theo_level(name, 2)
		task.wait(2)
    end
	
end


-----------------------
local Save = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local level = Save.Get().Mastery and Save.Get().Mastery.Enchants

if level and level < 13034430 then

    -- Hàm nâng cấp sách
    local function _update_sach_theo_level(name_sach, level_sach)
        local saveModule = require(game.ReplicatedStorage.Library.Client.Save)
        local inventory = saveModule.Get() and saveModule.Get().Inventory and saveModule.Get().Inventory.Enchant
        if not inventory then return end

        local count = 0
        local uid_sach = nil

        for itemUID, itemData in pairs(inventory) do
            if itemData.id == name_sach and itemData.tn == level_sach then
                count += (itemData._am or 1)
                uid_sach = tostring(itemUID)
            end
        end

        local totalUpgradeAmount = count // 5
        if uid_sach and totalUpgradeAmount > 0 then
            game:GetService("ReplicatedStorage").Network.UpgradeEnchantsMachine_Activate:InvokeServer(uid_sach, totalUpgradeAmount)
            warn("Upgrade: " .. name_sach .. " lv" .. level_sach .. " x" .. totalUpgradeAmount .. "\n")
        end
    end

    -- Danh sách sách cần nâng cấp
    local list = {
        "Treasure Hunter", "Tap Power", "Strong Pets", "Walkspeed",
        "Magnet", "Lucky Eggs", "Diamonds", "Criticals", "Coins"
    }

    for _, name in ipairs(list) do
        _update_sach_theo_level(name, 1)
		task.wait(2)
        _update_sach_theo_level(name, 2)
		task.wait(2)
    end
	
end

end)


-- phát hiện không farm ở svv thoát game 
task.spawn(function()
task.wait(50)

local function autoShutdownIfNotAlone()
    local playerCount = #Players:GetPlayers()

    if playerCount > 1 then
        game:Shutdown()
		Players.LocalPlayer:Kick("kick")
    end
end

autoShutdownIfNotAlone()


end)

---------------------------------------------------------------------------------------------------------------------

-- up pet gold + rainbow : Quartz Fox  Wise Cat
task.spawn(function() 
wait(20)

local NamePet_ep = {
    "Quartz Fox",
	"Wise Cat",
}

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local SaveData = require(ReplicatedStorage.Library.Client.Save).Get()
local Manager = {}

function Manager:GetPets(name_pet, PT_yeucau)
    local SaveData = require(ReplicatedStorage.Library.Client.Save).Get()
    local Huges = {}
    for uid, v in pairs(SaveData.Inventory.Pet) do
        if string.find(v.id, name_pet) then
            if (PT_yeucau == nil and v.pt == nil) or (PT_yeucau ~= nil and v.pt == PT_yeucau) then
                table.insert(Huges, {
                    UID   = uid,
                    SH    = v.sh,
                    PT    = v.pt,
                    Count = v._am or 1
                })
            end
        end
    end
    return Huges
end

function Ghep_pet_len_gold_rainbow(danh_sach_ten_pet)
    for _, ten_pet in ipairs(danh_sach_ten_pet) do
        -- Gộp Gold
        local Pet_List1 = Manager:GetPets(ten_pet, nil)
        for _, pet in ipairs(Pet_List1) do
            while pet.Count >= 16 do
                local success, err = pcall(function()
                    game:GetService("ReplicatedStorage").Network.GoldMachine_Activate:InvokeServer(pet.UID, 2)
                end)
                if not success then
                    warn("❌ Lỗi khi ép pet GOLD: " .. tostring(err))
                    break
                end
                task.wait(1)
                pet.Count = pet.Count - 16
            end
        end

        -- Gộp Rainbow
        local Pet_List2 = Manager:GetPets(ten_pet, 1)
        for _, pet in ipairs(Pet_List2) do
            while pet.Count >= 16 do
                local success, err = pcall(function()
                    game:GetService("ReplicatedStorage").Network.RainbowMachine_Activate:InvokeServer(pet.UID, 2)
                end)
                if not success then
                    warn("❌ Lỗi khi ép pet RAINBOW: " .. tostring(err))
                    break
                end
                task.wait(1)
                pet.Count = pet.Count - 16
            end
        end
    end
end

-- Gọi hàm ép nhiều pet
Ghep_pet_len_gold_rainbow(NamePet_ep)


end)

-- xoá lưu pet rồi chọn pet mạnh nhất	
task.spawn(function()
	task.wait(55)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local PetsFolder = workspace:WaitForChild("__THINGS"):WaitForChild("Pets")
local Network = ReplicatedStorage:WaitForChild("Network")

 
 Network.Pets_ToggleFavoriteMode:FireServer()
    task.wait(1)

    Network.Pets_SetTeamIndex:FireServer(2)
    task.wait(2)

    Network.Pets_SetTeamIndex:FireServer(1)
    task.wait(2)

    Network.Pets_ToggleFavoriteMode:FireServer()
    task.wait(1)
end)










