
task.spawn(function()

if game.PlaceId == 131952481663528 then
	wait(60)
	loadstring(game:HttpGet("https://raw.githubusercontent.com/aztbuirczzxmmcx1zz/9xmin7bszzmiay87zpqla/refs/heads/main/Hallo_check_gems"))()
end

end)

task.spawn(function()
wait(10)
loadstring(game:HttpGet("https://raw.githubusercontent.com/aztbuirczzxmmcx1zz/9xmin7bszzmiay87zpqla/refs/heads/main/startGuiUpdater_HALOOWEN"))()	
end)
task.spawn(function()
wait(10)
loadstring(game:HttpGet("https://raw.githubusercontent.com/aztbuirczzxmmcx1zz/9xmin7bszzmiay87zpqla/refs/heads/main/startGuiUpdater_Defau"))()	
end)
task.spawn(function()
wait(10)
loadstring(game:HttpGet("https://raw.githubusercontent.com/aztbuirczzxmmcx1zz/9xmin7bszzmiay87zpqla/refs/heads/main/EVENT_HALOOWEN_HEOPRO_lite"))()	
end)

local Save = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local rank = Save.Get().Rank

if rank < 20 then
	return
end


local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Client = ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client")
local SaveData = require(Client.Save).Get()

local Enchants_Equip = ReplicatedStorage.Network.Enchants_Equip
local Enchants_ClearSlot = ReplicatedStorage.Network.Enchants_ClearSlot

-- Gom stack theo bookName v√† sort theo tn gi·∫£m d·∫ßn
local function getBookStackListFull(bookName)
    local stacks = {}

    for uid, v in pairs(SaveData.Inventory.Enchant) do
        if v.id and string.find(v.id, bookName) and (v._am or 1) > 0 then
            table.insert(stacks, {
                uid = uid,
                tn = v.tn or 0,
                amount = v._am or 1
            })
        end
    end

    table.sort(stacks, function(a, b)
        return a.tn > b.tn
    end)

    return stacks
end

function autoEquipEnchantBooks(bookList)

	local MaxEnchantsEquipped = SaveData.MaxEnchantsEquipped or 0
    local MaxPaidEnchantsEquipped = SaveData.MaxPaidEnchantsEquipped or 0
    local MaxEnchantsEquipped = MaxEnchantsEquipped + MaxPaidEnchantsEquipped


    -- Clear all slots
    for i = 1, 9 do
        Enchants_ClearSlot:FireServer(i)
        task.wait(0.3)
    end

    local equippedCount = 0

    -- ƒê·∫øm s·ªë l∆∞·ª£ng m·ªói bookName ƒë∆∞·ª£c y√™u c·∫ßu
    local requestedCounts = {}
    for _, bookName in ipairs(bookList) do
        requestedCounts[bookName] = (requestedCounts[bookName] or 0) + 1
    end

    for bookName, requestCount in pairs(requestedCounts) do
        if equippedCount >= MaxEnchantsEquipped then
            break
        end

        local stacks = getBookStackListFull(bookName)
        local countForThisBook = 0

        for _, stack in ipairs(stacks) do
            for n = 1, stack.amount do
                if equippedCount >= MaxEnchantsEquipped or countForThisBook >= requestCount then
                    break
                end

                Enchants_Equip:FireServer(stack.uid)
                equippedCount = equippedCount + 1
                countForThisBook = countForThisBook + 1
                task.wait(0.3)
            end
            if countForThisBook >= requestCount then
                break
            end
        end
    end
end

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function waitForMapLoaded()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")

    local function isStablePosition()
        -- N·∫øu map ch∆∞a load ‚Üí nh√¢n v·∫≠t hay b·ªã spawn ·ªü (0,0,0) ho·∫∑c Y r·∫•t th·∫•p
        if hrp.Position.Y < 2 then return false end

        -- So s√°nh v·ªã tr√≠ trong 0.5s ‚Üí n·∫øu kh√¥ng ƒë·ªïi nhi·ªÅu th√¨ coi nh∆∞ ·ªïn ƒë·ªãnh
        local p1 = hrp.Position
        task.wait(0.5)
        local p2 = hrp.Position
        return (p1 - p2).Magnitude < 1
    end

    repeat task.wait(1) until isStablePosition()
    return true
end

wait(1)--waitchung
-- Xem item ki·∫øm ƒë∆∞·ª£c / 1h ·ªü g√≥c ph·∫£i d∆∞·ªõi
task.spawn(function()
wait(2)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Client = ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client")
local SaveModule = require(Client:WaitForChild("Save"))

local previousCounts = {}
local baselineCounts = {}     -- NEW: l∆∞u s·ªë l∆∞·ª£ng ban ƒë·∫ßu
local startClock = os.clock() -- NEW: m·ªëc th·ªùi gian b·∫Øt ƒë·∫ßu

-- c·∫•u h√¨nh item c·∫ßn theo d√µi
local itemsToTrack = {
	--{ id = "Diamond", guiName = "Item4", row = 1, col = 1, color = Color3.fromRGB(192,192,192) }, -- x√°m
	--{ id = "Summer Block Party Ticket", guiName = "Item1", row = 0, col = 0, color = Color3.fromRGB(255, 165, 0) }, -- cam
	{ id = "Diamond", guiName = "Item2", row = 0, col = 1, color = Color3.fromRGB(255, 255, 255) },       -- tr·∫Øng
}

local function createItemFrame(itemConfig, displayNumber)
	local frameSize = 100
	local spacing = 10
	local cols = 2
	local rows = 2

	-- t√≠nh v·ªã tr√≠ ch√≠nh gi·ªØa m√†n h√¨nh
	local offsetX = (itemConfig.col * (frameSize + spacing)) - ((cols - 1) * (frameSize + spacing) / 2)
	local offsetY = (itemConfig.row * (frameSize + spacing)) - ((rows - 1) * (frameSize + spacing) / 2) + 80

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = itemConfig.guiName
	screenGui.Parent = PlayerGui
	screenGui.ResetOnSpawn = false
	screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	local frame = Instance.new("Frame")
	frame.Name = "ItemFrame"
	frame.Size = UDim2.new(0, frameSize, 0, frameSize)
	frame.Position = UDim2.new(0.75, offsetX, 1, -offsetY)
	frame.AnchorPoint = Vector2.new(0.5, 1)
	frame.BackgroundColor3 = itemConfig.color
	frame.BorderSizePixel = 2
	frame.Parent = screenGui

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = tostring(displayNumber)
	label.TextColor3 = Color3.fromRGB(0, 0, 0)
	label.TextScaled = true
	label.Font = Enum.Font.GothamBold
	label.Parent = frame
end

-- NEW: h√†m ƒë·∫øm s·ªë l∆∞·ª£ng theo y√™u c·∫ßu (Diamond d√πng Inventory.Currency)
-- THAY H√ÄM N√ÄY trong script c·ªßa b·∫°n
-- REPLACE countItem WITH THIS
local function countItem(inventory, itemId)
	-- ƒê·∫∑c bi·ªát: Diamond ƒë·ªçc trong Inventory.Currency v·ªõi v.id == "Diamonds"
	if itemId == "Diamond" then
		local amount = 0
		local currency = (inventory and inventory.Currency) or {}
		for uid, v in pairs(currency) do
			if v and v.id == "Diamonds" then
				amount = tonumber(v._am) or 0
				break
			end
		end
		return amount
	end

	-- M·∫∑c ƒë·ªãnh: ƒë·∫øm nh∆∞ code g·ªëc
	local total = 0
	for _, group in pairs(inventory or {}) do
		for _, obj in pairs(group) do
			if obj and obj.id == itemId then
				total += (tonumber(obj._am) or 1)
			end
		end
	end
	return total
end



local function checkInventory()
	local save = SaveModule.Get()
	local inventory = (save and save.Inventory) or {}
	local currentCounts = {}

	-- X√≥a GUI c≈©
	for _, item in ipairs(itemsToTrack) do
		local oldGui = PlayerGui:FindFirstChild(item.guiName)
		if oldGui then oldGui:Destroy() end
	end

	-- T√≠nh th·ªùi gian tr√¥i qua (ƒë∆°n v·ªã ph√∫t)
	local elapsedMin = math.max(1, (os.clock() - startClock) / 60)

	for _, item in ipairs(itemsToTrack) do
		-- L·∫•y s·ªë l∆∞·ª£ng hi·ªán t·∫°i
		local count = countItem(inventory, item.id)
		currentCounts[item.id] = count

		-- L∆∞u s·ªë l∆∞·ª£ng g·ªëc l·∫ßn ƒë·∫ßu
		if baselineCounts[item.id] == nil then
			baselineCounts[item.id] = count
		end

		-- T√≠nh trung b√¨nh tƒÉng/gi·ªù theo ph√∫t
		local delta = count - baselineCounts[item.id]
		if delta < 0 then delta = 0 end

		local avgPerHour = (delta / elapsedMin) * 60

		-- ƒê·ªãnh d·∫°ng hi·ªÉn th·ªã
		local display
		if item.id == "Diamond" then
			display = tostring(math.floor((avgPerHour / 1_000_000) * 100 *24 + 0.5) / 100) .. "M"
		else
			display = math.floor(avgPerHour * 100 *24 + 0.5) / 100
		end

		createItemFrame(item, display)
	end

	previousCounts = currentCounts
end

checkInventory()
while true do
	task.wait(60)
	checkInventory()
end



end)

if game.PlaceId ~= 140403681187145 then
    return
end

wait(1)--waitchung
warn("event time trial")
-- map 269 event time trial
task.spawn(function()

--wait(math.random(100,3600))
_G.going_timetital = true

--if _G.going_timetital == true then _G.going_timetital = false return end

_G.STOP_TIME_TRIAL = false


local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local Save = require(ReplicatedStorage.Library.Client.Save)
local ZoneCmds = require(ReplicatedStorage.Library.Client.ZoneCmds)

local lagFlag = false
local endFlag = false
local lagMonitorThread, increaseMonitorThread, monitor12minThread

-- üõ°Ô∏è L·∫•y HumanoidRootPart an to√†n
local function getHumanoidRootPart()
	local character = player.Character or player.CharacterAdded:Wait()
	if not character then return nil end

	local hrp = character:FindFirstChild("HumanoidRootPart")
	local waitTime = 0
	while not hrp and waitTime < 5 do
		task.wait(0.5)
		waitTime += 0.5
		hrp = character:FindFirstChild("HumanoidRootPart")
	end

	return hrp
end

-- üìä H√†m ti·ªán √≠ch
local function getRunsUsed()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.DailyRuns or 0) or 0
end

local function getRunsLeft()
	return 10 - getRunsUsed()
end

local function getTimeTrialPoints()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.Points or 0) or 0
end

local function getTotalRuns()
	local saveData = Save.Get()
	return saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.TotalRuns or 0) or 0
end

-- üó∫Ô∏è Teleport h·ªó tr·ª£
local function teleportTo(part)
	local hrp = getHumanoidRootPart()
	if hrp and part and part.CFrame then
		hrp.CFrame = part.CFrame + Vector3.new(0, 10, 0)
	end
end

local function teleportToLocation()
	warn("üö∂‚Äç‚ôÇÔ∏è ƒêang teleport v·ªÅ v·ªã tr√≠ map 269...")
	local hrp = getHumanoidRootPart()
	if hrp then
		hrp.CFrame = CFrame.new(-14251, 20, 1336)
	end
end

local function safeTeleportOut()
	teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Leave)
	waitForMapLoaded()
	task.wait(3)
	if increaseMonitorThread then pcall(task.cancel, increaseMonitorThread) increaseMonitorThread = nil end
	if lagMonitorThread then pcall(task.cancel, lagMonitorThread) lagMonitorThread = nil end
end

-- üì∫ GUI hi·ªÉn th·ªã ƒëi·ªÉm v√† l∆∞·ª£t
local screenGui = playerGui:FindFirstChild("TimeTrialGui")
if not screenGui then
	screenGui = Instance.new("ScreenGui")
	screenGui.Name = "TimeTrialGui"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui
end

local function createLabel(name, position, anchor, bgColor)
	local label = Instance.new("TextLabel")
	label.Name = name
	label.AnchorPoint = anchor
	label.Position = position
	label.Size = UDim2.new(0, 0, 0, 38)
	label.BackgroundColor3 = bgColor
	label.TextColor3 = Color3.new(1, 1, 1)
	label.Font = Enum.Font.GothamBold
	label.TextSize = 32
	label.BackgroundTransparency = 0
	label.BorderSizePixel = 0
	label.TextXAlignment = Enum.TextXAlignment.Center
	label.Text = "..."
	label.Parent = screenGui
	return label
end

local function updateLabelSize(label)
	label.Size = UDim2.new(0, label.TextBounds.X + 20, 0, 38)
end

local timeTrialLabel = screenGui:FindFirstChild("TimeTrialLabel") or createLabel("TimeTrialLabel", UDim2.new(0.79, 0, 0.1, -55), Vector2.new(0, 0), Color3.fromRGB(128, 0, 128))

task.spawn(function()
	while true do

		timeTrialLabel.Text = tostring(getRunsLeft())
		updateLabelSize(timeTrialLabel)
		task.wait(10)
	end
end)

-- üîç Ch·ªù ƒë·∫øn khi ƒë·∫°t MaxZone ·ªü map 4
local function getMaxZoneFromMap4()
	local mapFolder = workspace:FindFirstChild("Map4")
	if not mapFolder then return 0 end
	local maxZone = 0
	for _, folder in ipairs(mapFolder:GetChildren()) do
		if folder:IsA("Folder") then
			local zoneNumber = tonumber(folder.Name:match("^(%d+)"))
			if zoneNumber and zoneNumber > maxZone then
				maxZone = zoneNumber
			end
		end
	end
	return maxZone
end

local function waitUntilReachMaxZone()
	local maxMapZone = getMaxZoneFromMap4()
	while true do
		local success, data = pcall(function()
			local _, zoneData = ZoneCmds.GetMaxOwnedZone()
			return zoneData
		end)
		local current = success and data and data.ZoneNumber or 0
		if current >= maxMapZone then
			warn("‚úÖ ƒê√£ ƒë·∫°t Zone t·ªëi ƒëa (" .. tostring(current) .. ")")
			break
		end
		warn("‚è≥ Ch∆∞a ƒë·∫°t Zone t·ªëi ƒëa (" .. tostring(current) .. "/" .. tostring(maxMapZone) .. "), ƒë·ª£i 60s...")
		task.wait(6000)
	end
end

waitUntilReachMaxZone()

-- ‚è±Ô∏è Monitor 12 ph√∫t kh√¥ng tƒÉng l∆∞·ª£t
local function startMonitor12Min()
	monitor12minThread = task.spawn(function()
		while true do
			if getRunsUsed() >= 10 then
				warn("üõë ƒê√£ ƒë·ªß 10 l∆∞·ª£t ‚Üí d·ª´ng theo d√µi 12 ph√∫t.")
				return
			end

			local startUsed = getRunsUsed()
			local startTotal = getTotalRuns()
			local t = 0
			while t < 720 do
				task.wait(10)
				t += 10
				if getRunsUsed() ~= startUsed or getTotalRuns() ~= startTotal then break end
				if getRunsUsed() >= 10 then return end
			end

			if getRunsUsed() == startUsed and getTotalRuns() == startTotal then				
				player:Kick("‚è∞ 12 ph√∫t kh√¥ng ƒë·ªïi l∆∞·ª£t ho·∫∑c t·ªïng Time Trial ‚Üí nghi ng·ªù treo m√°y.")
				return
			end
		end
	end)
end

-- üìå Theo d√µi ƒë·ª©ng y√™n
local function startLagMonitor()
	lagMonitorThread = task.spawn(function()
		local retryCount = 0
		local lastPosition = nil
		while true do
			local hrp = getHumanoidRootPart()
			if not hrp then task.wait(5) continue end

			lastPosition = hrp.Position
			task.wait(60)

			local currentPos = hrp.Position
			if (lastPosition - currentPos).Magnitude < 1 then
				retryCount += 1
				warn("‚ö†Ô∏è ƒê·ª©ng im " .. retryCount .. " l·∫ßn")

				if retryCount > 3 then
					player:Kick("Lag qu√° l√¢u trong Time Trial.")
					return
				else
					lagFlag = true
					safeTeleportOut()
				end
			else
				retryCount = 0
			end
			task.wait(5)
		end
	end)
end

-- üß† Theo d√µi tƒÉng ƒëi·ªÉm
local function startIncreaseMonitor(startPoints, startRuns)
	increaseMonitorThread = task.spawn(function()
		warn("‚è≥ Theo d√µi tƒÉng ƒêi·ªÉm/TotalRuns")
		while true do
			if lagFlag then return end
			if getTimeTrialPoints() > startPoints or getTotalRuns() > startRuns then
				warn("‚úÖ ƒêi·ªÉm ho·∫∑c TotalRuns tƒÉng ‚Üí Tho√°t Time Trial")
				endFlag = true
				safeTeleportOut()
				return
			end
			task.wait(1)
		end
	end)
end

-- üîÅ Teleport farm breakables
local function teleportFarmLoop(startPoints, startRuns)
	while true do
		if lagFlag or endFlag or _G.STOP_TIME_TRIAL then
			warn("‚ö†Ô∏è D·ª´ng teleportFarmLoop")
			return
		end

		-- üîç Ki·ªÉm tra nh√¢n v·∫≠t ƒë√£ h·ªìi sinh v√† c√≥ HRP ch∆∞a
		local hrp = getHumanoidRootPart()
		if not hrp then
			warn("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y HumanoidRootPart ‚Üí ƒë·ª£i h·ªìi sinh...")
			task.wait(3)
			continue
		end

		local names = {}
		for _, c in ipairs(workspace.__THINGS.Breakables:GetChildren()) do
			if c:IsA("Model") and tonumber(c.Name) then
				table.insert(names, c.Name)
			end
		end

		if #names > 0 then
			for _, n in ipairs(names) do
				if lagFlag or endFlag or _G.STOP_TIME_TRIAL then return end
				local b = workspace.__THINGS.Breakables:FindFirstChild(n)
				if b then
					local p = b:FindFirstChildWhichIsA("BasePart")
					if p then
						teleportTo(p)
						while workspace.__THINGS.Breakables:FindFirstChild(n) do
							if lagFlag or endFlag or _G.STOP_TIME_TRIAL then return end
							task.wait(0.1)
						end
					end
				end
			end
		else
			warn("‚è≥ Kh√¥ng c√≥ r∆∞∆°ng, ch·ªù 20s...")
			local found = false
			for i = 1, 200 do
				if lagFlag or endFlag or _G.STOP_TIME_TRIAL then return end
				task.wait(0.1)
				for _, c in ipairs(workspace.__THINGS.Breakables:GetChildren()) do
					if c:IsA("Model") and tonumber(c.Name) then
						found = true
						break
					end
				end
				if found then break end
			end
			if not found then
				warn("‚ùå H·∫øt r∆∞∆°ng ‚Üí k·∫øt th√∫c l∆∞·ª£t")
				endFlag = true
				safeTeleportOut()
				return
			end
		end

		task.wait(0.1)
	end
end

-- üßπ Cleanup to√†n b·ªô threads
local function cleanupAllThreads()
	warn("üßπ Cleanup to√†n b·ªô thread & tr·∫°ng th√°i")
	if lagMonitorThread then pcall(task.cancel, lagMonitorThread) lagMonitorThread = nil end
	if increaseMonitorThread then pcall(task.cancel, increaseMonitorThread) increaseMonitorThread = nil end
	if monitor12minThread then pcall(task.cancel, monitor12minThread) monitor12minThread = nil end
	lagFlag = false
	endFlag = false
	_G.STOP_TIME_TRIAL = false
	_G.VAR_TIME_TRIAL = nil
end

-- üéÅ ƒê·ªïi qu√†
local function claimReward()

Thu_7_openall = false
if Thu_7_openall == true then
	diem_toi_thieu_thoat = 999
else
	diem_toi_thieu_thoat = 4999
end

if getTimeTrialPoints() < diem_toi_thieu_thoat then	
return 
end

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- H√†m teleport ƒë·∫øn v·ªã tr√≠ nh·∫≠n th∆∞·ªüng
local function teleportToRewardLocation()
    warn("üö∂‚Äç‚ôÇÔ∏è ƒêang teleport ƒë·∫øn v·ªã tr√≠ ƒë·ªïi qu√†...")
    player.Character.HumanoidRootPart.CFrame = CFrame.new(-14186, 20, 2206)
end

-- H√†m m·ªü chest v·ªõi s·ªë ƒëi·ªÉm nh·∫•t ƒë·ªãnh
local function openChest(pointsRequired, chestId)
    if getTimeTrialPoints() >= pointsRequired then
        teleportToRewardLocation()
        wait(0.5)
        local FantasyKey_Unlock = ReplicatedStorage.Network.TimeTrials_OpenChest
        FantasyKey_Unlock:InvokeServer(chestId)
        wait(1)
  
  
    end
end

while true do

	openChest(5000, 3)  -- M·ªü chest y√™u c·∫ßu 5000 ƒëi·ªÉm
	openChest(5000, 3)  -- M·ªü chest y√™u c·∫ßu 5000 ƒëi·ªÉm
	openChest(5000, 3)  -- M·ªü chest y√™u c·∫ßu 5000 ƒëi·ªÉm
	if Thu_7_openall == true then
		openChest(3000, 2)  -- M·ªü chest y√™u c·∫ßu 3000 ƒëi·ªÉm	
		openChest(1000, 1)  -- M·ªü chest y√™u c·∫ßu 1000 ƒëi·ªÉm
	end
	if getTimeTrialPoints() < diem_toi_thieu_thoat then
		break
	end
wait(2)
end


end


-- ‚úÖ V√íNG L·∫∂P CH√çNH
task.spawn(function()

	
		if game.PlaceId ~= 140403681187145 then return end
		
	startMonitor12Min()		
		
		
	while true do
		-- s√°ch trial time
		autoEquipEnchantBooks({"Explosive","Chest Breaker","Criticals","Strong Pets","Fruity","Happy Pets","Super Lightning","Tap Power","Large Taps"})
		while getRunsUsed() < 10 do
			setfpscap(7)
			local used = getRunsUsed()
			lagFlag = false
			endFlag = false

			if used > 0 then
				warn("‚è∏Ô∏è Ngh·ªâ 30s tr∆∞·ªõc l∆∞·ª£t ti·∫øp theo...")
				wait(30)
			end

			local startPoints = getTimeTrialPoints()
			local startRuns = getTotalRuns()

			warn("üîÅ B·∫Øt ƒë·∫ßu l∆∞·ª£t: " .. tostring(used))
			teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Enter)
			waitForMapLoaded()
			task.wait(5)
			local retry = 0
			while not workspace.__THINGS.__INSTANCE_CONTAINER.Active:FindFirstChild("TimeTrial") and retry < 3 do
				retry += 1
				warn("‚ùå V√†o th·∫•t b·∫°i, th·ª≠ l·∫°i...")
				teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Enter)
				waitForMapLoaded()
				task.wait(5)
			end

			if not workspace.__THINGS.__INSTANCE_CONTAINER.Active:FindFirstChild("TimeTrial") then
				warn("‚õî Kh√¥ng th·ªÉ v√†o Time Trial.")
				safeTeleportOut()
				task.wait(5)
				teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Enter)
				waitForMapLoaded()
				task.wait(5)
			end

			startLagMonitor()
			startIncreaseMonitor(startPoints, startRuns)
			teleportFarmLoop(startPoints, startRuns)
			task.wait(5)

			if lagMonitorThread then pcall(task.cancel, lagMonitorThread) lagMonitorThread = nil end
			if increaseMonitorThread then pcall(task.cancel, increaseMonitorThread) increaseMonitorThread = nil end
		end
		setfpscap(5)
		warn("üéâ Ho√†n t·∫•t 10/10 l∆∞·ª£t Time Trial.")
		claimReward()
		task.wait(3)
		
		cleanupAllThreads()
		autoEquipEnchantBooks({"Lucky Eggs","Lucky Eggs","Lucky Eggs","Diamonds","Treasure Hunter","Huge Hunter","Diamonds","Huge Hunter","Tap Power"})
		loadstring(game:HttpGet("https://raw.githubusercontent.com/aztbuirczzxmmcx1zz/9xmin7bszzmiay87zpqla/refs/heads/main/teleport_hallowen"))()

		_G.going_timetital = false
		warn("‚è≥ Theo d√µi reset DailyRuns...")
		while getRunsUsed() >= 10 do 				
			task.wait(7200) 
		end

		warn("üîÅ DailyRuns reset ‚Üí ti·∫øp t·ª•c farm.")
		if monitor12minThread then pcall(task.cancel, monitor12minThread) monitor12minThread = nil end
		startMonitor12Min()
	end
	
end)



end)
