




-- check to·∫° ƒë·ªô vs x√∫t ra khi b·ªã r∆°i
task.spawn(function()
	task.wait(150)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- T·∫°o GUI hi·ªÉn th·ªã t·ªça ƒë·ªô
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local coordLabel = Instance.new("TextLabel")
coordLabel.Size = UDim2.new(0, 400, 0, 50)
coordLabel.Position = UDim2.new(0.5, -200, 0.5, -25) -- Gi·ªØa m√†n h√¨nh
coordLabel.BackgroundTransparency = 0.4
coordLabel.BackgroundColor3 = Color3.new(0, 0, 0)
coordLabel.TextColor3 = Color3.new(1, 1, 1)
coordLabel.TextScaled = true
coordLabel.Font = Enum.Font.SourceSansBold
coordLabel.Text = "wait..."
coordLabel.Parent = screenGui

-- C·∫≠p nh·∫≠t t·ªça ƒë·ªô nh√¢n v·∫≠t li√™n t·ª•c
RunService.RenderStepped:Connect(function()
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        --local pos = character.HumanoidRootPart.Position
        --coordLabel.Text = string.format(" X: %.1f | Y: %.1f | Z: %.1f", pos.X, pos.Y, pos.Z)
    else
        coordLabel.Text = "not find user!"
		game:Shutdown()  -- Tho√°t game
    end
end)


end)


-- Gh√©p s√°ch + thu·ªëc n·∫øu lv < 99 
task.spawn(function()
	task.wait(150)
local Save = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local level = Save.Get().Mastery and Save.Get().Mastery.Potions

if level and level < 13034430 then

    -- H√†m n√¢ng c·∫•p thu·ªëc
    local function _update_sach_theo_level(name_sach, level_sach)
        local saveModule = require(game.ReplicatedStorage.Library.Client.Save)
        local inventory = saveModule.Get() and saveModule.Get().Inventory and saveModule.Get().Inventory.Potion
        if not inventory then return end

        local count = 0
        local uid_sach = nil

        for itemUID, itemData in pairs(inventory) do
            if itemData.id == name_sach and itemData.tn == level_sach then
                count += (itemData._am or 1)
                uid_sach = tostring(itemUID)
            end
        end

        local totalUpgradeAmount = count // 3
        if uid_sach and totalUpgradeAmount > 0 then
            game:GetService("ReplicatedStorage").Network.UpgradePotionsMachine_Activate:InvokeServer(uid_sach, totalUpgradeAmount)
            warn("Upgrade: " .. name_sach .. " UID : " .. uid_sach .. " x" .. totalUpgradeAmount .. "\n")
        end
    end

    -- Danh s√°ch s√°ch c·∫ßn n√¢ng c·∫•p
    local list = {
        "Treasure Hunter", "Walkspeed", "Strong Pets", 
        "Lucky Eggs", "Diamonds", "Coins"
    }

    for _, name in ipairs(list) do
        _update_sach_theo_level(name, 1)
		task.wait(2)
        _update_sach_theo_level(name, 2)
		task.wait(2)
    end
	
end


-----------------------
local Save = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local level = Save.Get().Mastery and Save.Get().Mastery.Enchants

if level and level < 13034430 then

    -- H√†m n√¢ng c·∫•p s√°ch
    local function _update_sach_theo_level(name_sach, level_sach)
        local saveModule = require(game.ReplicatedStorage.Library.Client.Save)
        local inventory = saveModule.Get() and saveModule.Get().Inventory and saveModule.Get().Inventory.Enchant
        if not inventory then return end

        local count = 0
        local uid_sach = nil

        for itemUID, itemData in pairs(inventory) do
            if itemData.id == name_sach and itemData.tn == level_sach then
                count += (itemData._am or 1)
                uid_sach = tostring(itemUID)
            end
        end

        local totalUpgradeAmount = count // 5
        if uid_sach and totalUpgradeAmount > 0 then
            game:GetService("ReplicatedStorage").Network.UpgradeEnchantsMachine_Activate:InvokeServer(uid_sach, totalUpgradeAmount)
            warn("Upgrade: " .. name_sach .. " lv" .. level_sach .. " x" .. totalUpgradeAmount .. "\n")
        end
    end

    -- Danh s√°ch s√°ch c·∫ßn n√¢ng c·∫•p
    local list = {
        "Treasure Hunter", "Tap Power", "Strong Pets", "Walkspeed",
        "Magnet", "Lucky Eggs", "Diamonds", "Criticals", "Coins"
    }

    for _, name in ipairs(list) do
        _update_sach_theo_level(name, 1)
		task.wait(2)
        _update_sach_theo_level(name, 2)
		task.wait(2)
    end
	
end

end)


task.spawn(function()
	task.wait(25)
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

-- L·∫•y diamonds t·ª´ leaderstats
local diamondsStat = player:WaitForChild("leaderstats"):FindFirstChild("üíé Diamonds") or player.leaderstats:WaitForChild("Diamonds")

local GUI_NAME = "GemStatusUI"

local COLOR_RED = Color3.new(1, 0, 0)
local COLOR_BLUE = Color3.fromRGB(173, 216, 230) -- xanh bi·ªÉn nh·∫°t

-- T·∫°o ho·∫∑c c·∫≠p nh·∫≠t giao di·ªán
local function updateUI(diamonds)
	local gui = PlayerGui:FindFirstChild(GUI_NAME)

	-- N·∫øu ch∆∞a c√≥ GUI, t·∫°o m·ªõi
	if not gui then
		gui = Instance.new("ScreenGui")
		gui.Name = GUI_NAME
		gui.IgnoreGuiInset = true
		gui.ResetOnSpawn = false
		gui.ZIndexBehavior = Enum.ZIndexBehavior.Global
		gui.Parent = PlayerGui

		local stripe = Instance.new("Frame")
		stripe.Name = "Stripe"
		stripe.Size = UDim2.new(1, 0, 0, 50) -- chi·ªÅu cao thu nh·ªè
		stripe.Position = UDim2.new(0, 0, 0, 0)
		stripe.BackgroundTransparency = 0.2
		stripe.BorderSizePixel = 0
		stripe.ZIndex = 9999
		stripe.Parent = gui

		local nameLabel = Instance.new("TextLabel")
		nameLabel.Name = "NameLabel"
		nameLabel.Size = UDim2.new(0.9, 0, 0.8, 0) -- gi·ªëng style ItemFrame
		nameLabel.Position = UDim2.new(0.05, 0, 0.1, 0)
		nameLabel.BackgroundTransparency = 1
		nameLabel.Font = Enum.Font.GothamBold
		nameLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
		nameLabel.TextScaled = true
		nameLabel.Text = "" -- c·∫≠p nh·∫≠t ·ªü d∆∞·ªõi
		nameLabel.ZIndex = 10000
		nameLabel.Parent = stripe
	end

	-- C·∫≠p nh·∫≠t n·ªôi dung v√† m√†u
	local stripe = gui:FindFirstChild("Stripe")
	local label = stripe and stripe:FindFirstChild("NameLabel")

	if stripe and label then
		if diamonds < 10_000_000 then
			stripe.BackgroundColor3 = COLOR_RED
			label.Text = player.Name
		else
			stripe.BackgroundColor3 = COLOR_BLUE
			label.Text = player.Name
		end
	end
end

-- Theo d√µi m·ªói 10 gi√¢y
local function monitor()
	while true do
		task.wait(10)
		local diamonds = diamondsStat.Value
		updateUI(diamonds)
	end
end

-- B·∫Øt ƒë·∫ßu
task.spawn(monitor)


end)
