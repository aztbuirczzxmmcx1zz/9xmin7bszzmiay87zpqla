loadstring(game:HttpGet("https://scriptblox.com/raw/Universal-Script-Sigma-Spy-41026"))()


loadstring(game: HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/refs/heads/master/source"))()

setfpscap(120)
setfpscap(5)


local owner = "Upbolt"
local branch = "revision"

local function webImport(file)
    return loadstring(game:HttpGetAsync(("https://raw.githubusercontent.com/%s/Hydroxide/%s/%s.lua"):format(owner, branch, file)), file .. '.lua')()
end

webImport("init")
webImport("ui/main")

-------------
15588442388


if game.PlaceId == 15502339080 or game.PlaceId == 15588442388 then

else

	local TeleportService = game:GetService("TeleportService")
	local placeId = 15502339080
	TeleportService:Teleport(placeId, game.Players.LocalPlayer)
	return
end

warn("____________PlaceId hi·ªán t·∫°i l√†:________ " .. game.PlaceId)
vin
https://www.roblox.com/share?code=9629a0bb7fc53a48aadadf52fefda84e&type=Server

thai
https://www.roblox.com/share?code=92ba132b2c49c64e87d85804ba2e1ab4&type=Server

thien
https://www.roblox.com/share?code=e952237771078b49ab1c594087492cf6&type=Server

phuong
https://www.roblox.com/share?code=49f71ea2ba2ff94e8134b65596fbdd7e&type=Server



game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("World4Teleport"):InvokeServer()
95635359880599 		Fish
140403681187145		w4
17503543197			w3
8737899170			w1


game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("World1Teleport"):InvokeServer()

game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("World2Teleport"):InvokeServer()

if game.PlaceId ~= 15502339080 then

	local TeleportService = game:GetService("TeleportService")
	local placeId = 15502339080
	TeleportService:Teleport(placeId, game.Players.LocalPlayer)

end


task.spawn(function()
	task.wait(18)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Client = ReplicatedStorage:FindFirstChild("Library") and ReplicatedStorage.Library.Client
local SaveModule = require(Client.Save)

local diamonds = LocalPlayer:WaitForChild("leaderstats"):WaitForChild("üíé Diamonds")

-- H√†m ƒë·ªãnh d·∫°ng ch·ªâ l·∫•y s·ªë nguy√™n ƒë∆°n v·ªã tri·ªáu
local function formatToMillions(value)
	if value >= 1000000 then
		local millions = math.floor(value / 1000000)
		return tostring(millions) .. "M"
	else
		return tostring(value)
	end
end

local itemsToTrack = {


	{
		id = "üíé Diamonds", -- ƒê√°nh d·∫•u ƒë·∫∑c bi·ªát cho kim c∆∞∆°ng
		guiName = "CustomNotification2",
		frameName = "NotificationFrame2",
		position = UDim2.new(1, -160, 0.9, -70),
		color = Color3.fromRGB(0, 255, 255),
	},
	{
		id = "MVP Key", 
		guiName = "CustomNotification3",
		frameName = "NotificationFrame3",
		position = UDim2.new(1, -160, 0.9, -10),
		color = Color3.fromRGB(128, 0, 128),
	},
	{
		id = "Huge", 
		guiName = "CustomNotification4",
		frameName = "NotificationFrame4",
		position = UDim2.new(1, -160, 0.9, -130),
		color = Color3.fromRGB(255, 165, 0), -- cam
	},

}

local function checkForItems()
	local inventory = SaveModule.Get()["Inventory"]

	for _, itemConfig in ipairs(itemsToTrack) do
		-- Xo√° GUI c≈© n·∫øu c√≥
		local existingGui = PlayerGui:FindFirstChild(itemConfig.guiName)
		if existingGui then
			existingGui:Destroy()
		end

		local itemCount = 0
		if itemConfig.id == "üíé Diamonds" then
			itemCount = diamonds.Value
		elseif itemConfig.id == "Huge" then
			local pets = inventory.Pet
			for _, pet in pairs(pets) do
				if string.find(pet.id, "Huge") then
					local amount = pet._am or 1
					itemCount = itemCount + amount
				end
			end
			
		else
			for _, items in pairs(inventory) do
				for _, item in pairs(items) do
					if item.id == itemConfig.id then
						itemCount = itemCount + (item._am or 1)
					end
				end
			end
		end

		-- T·∫°o GUI n·∫øu c√≥ item ho·∫∑c kim c∆∞∆°ng > 0

			local screenGui = Instance.new("ScreenGui")
			screenGui.Name = itemConfig.guiName
			screenGui.Parent = PlayerGui

			local frame = Instance.new("Frame")
			frame.Name = itemConfig.frameName
			frame.Size = UDim2.new(0, 50, 0, 50)
			frame.Position = itemConfig.position
			frame.BackgroundColor3 = itemConfig.color
			frame.BorderSizePixel = 2
			frame.Parent = screenGui

			local textLabel = Instance.new("TextLabel")
			textLabel.Size = UDim2.new(1, 0, 1, 0)
			textLabel.BackgroundTransparency = 1
			textLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
			-- S·ª≠ d·ª•ng h√†m ƒë·ªãnh d·∫°ng theo y√™u c·∫ßu ch·ªâ l·∫•y s·ªë nguy√™n ƒë∆°n v·ªã tri·ªáu cho kim c∆∞∆°ng
			if itemConfig.id == "üíé Diamonds" then
				textLabel.Text = formatToMillions(itemCount)
			else
				textLabel.Text = tostring(itemCount)
			end
			textLabel.TextScaled = true
			textLabel.Parent = frame

	end
end

-- G·ªçi l·∫ßn ƒë·∫ßu v√† sau ƒë√≥ c·∫≠p nh·∫≠t m·ªói 30 gi√¢y
checkForItems()
while true do
	task.wait(10)
	checkForItems()
end

end)

-- Ki·ªÉm tra t√™n
if player.Name == targetNames[1] or player.Name == targetNames[2] or player.Name == targetNames[3] then
	getgenv().GMAIL_RECEIVERS = {""}
else
	-- Random 1 t√™n t·ª´ danh s√°ch
	local randomIndex = math.random(1, #targetNames)
	getgenv().GMAIL_RECEIVERS = {targetNames[randomIndex]}
end


game:GetService("ReplicatedStorage").Network.FreeHuge_Redeem:InvokeServer()


<@550030300550397972>  
```lua


local Save = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local rank = Save.Get().Rank

if rank < 11 then
-- cfg without event zone  
else
 -- cfg with event zone
end

local args = {
    [1] = "Default"
}

game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("ForeverPacks: Claim Free"):InvokeServer(unpack(args))




--task.spawn(function()
--	task.wait(80)
--local Players = game:GetService("Players")
--local RunService = game:GetService("RunService")
--local player = Players.LocalPlayer
--
---- V·ªã tr√≠ d·ªãch chuy·ªÉn ƒë√≠ch
--local targetPosition = Vector3.new(-1431, 17, -22482)
--
---- H√†m d·ªãch chuy·ªÉn nh√¢n v·∫≠t
--local function teleportCharacter()
--    local character = player.Character or player.CharacterAdded:Wait()
--    local rootPart = character:WaitForChild("HumanoidRootPart")
--    rootPart.CFrame = CFrame.new(targetPosition)
--end
--
---- L·∫∑p v√¥ h·∫°n m·ªói 60 gi√¢y
--while true do
--    teleportCharacter()
--    task.wait(60)  -- Ch·ªù 1 ph√∫t
--end
--end)


-- check v·ªã tr√≠ ƒë·ª©ng y√™n l√¢u th√¨ tho√°t
task.spawn(function()
	task.wait(80)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local timeInRange = 0
local checkInterval = 1  -- Ki·ªÉm tra m·ªói gi√¢y
local requiredTime = 60  -- Th·ªùi gian c·∫ßn duy tr√¨ ƒë·ªÉ tho√°t game

while true do
    task.wait(checkInterval)  -- ƒê·ª£i 1 gi√¢y tr∆∞·ªõc m·ªói l·∫ßn ki·ªÉm tra
    
    if character and character:FindFirstChild("HumanoidRootPart") then
        local yPos = character.HumanoidRootPart.Position.Y
        
        if yPos >= 10 and yPos <= 15 then
            timeInRange = timeInRange + checkInterval
        else
            timeInRange = 0
        end

        if timeInRange >= requiredTime then
            game:Shutdown()  -- Tho√°t game 
            break
        end
    end
end

	
end)


-- b·∫•m n√∫t heroic 
task.spawn(function()
	task.wait(80)

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local replicatedStorage = game:GetService("ReplicatedStorage")

-- State
local chestEnabled = false
local chestLoop = nil

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HeroicChestGui"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Create Button
local button = Instance.new("TextButton")
button.Name = "HeroicChestButton"
button.Size = UDim2.new(0, 160, 0, 50)
button.Position = UDim2.new(1, -10, 0.5, 0)
button.AnchorPoint = Vector2.new(1, 0.5)
button.BackgroundColor3 = Color3.fromRGB(255, 170, 0)
button.Text = "B·∫≠t Heroic Chest"
button.Parent = screenGui

-- H√†m g·ª≠i l·ªánh
local function fireHeroicChest()
	replicatedStorage.Network.Instancing_FireCustomFromClient:FireServer("EasterEvent", "SpawnHeroicChest")
end

-- B·∫•m n√∫t
button.MouseButton1Click:Connect(function()
	chestEnabled = not chestEnabled

	if chestEnabled then
		button.Text = "T·∫Øt Heroic Chest"
		-- G·ª≠i l·∫ßn ƒë·∫ßu ngay l·∫≠p t·ª©c
		fireHeroicChest()

		-- B·∫Øt ƒë·∫ßu v√≤ng l·∫∑p 300 gi√¢y
		chestLoop = task.spawn(function()
			while chestEnabled do
				task.wait(300)
				if chestEnabled then
					fireHeroicChest()
				end
			end
		end)
	else
		button.Text = "B·∫≠t Heroic Chest"
		chestEnabled = false
	end
end)

end)



-- t√¨m tr·ª©ng t√™n d√†i nh·∫•t r quay
task.spawn(function()
-- quay tr·ª©ng

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

    if character and character:FindFirstChild("HumanoidRootPart") then
        local yPos = character.HumanoidRootPart.Position.Y
		
		if yPos >= 10 and yPos <= 15 then
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(13461, 7, -615)
						wait(1)

						local Eggs = game.Players.LocalPlayer.PlayerScripts.Scripts.Game['Egg Opening Frontend']
						getsenv(Eggs).PlayEggAnimation = function() return end



						function find_hashed_egg()
							local eggsFolder = workspace:FindFirstChild("__THINGS") and workspace.__THINGS:FindFirstChild("CustomEggs")
							if not eggsFolder then
								warn("Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c CustomEggs.")
								return nil
							end

							local longestName = ""
							for _, v in pairs(eggsFolder:GetChildren()) do
								if not v:IsA("Model") then continue end
								if #v.Name > #longestName then
									longestName = v.Name
								end
							end

							if longestName == "" then
								warn("Kh√¥ng t√¨m ƒë∆∞·ª£c tr·ª©ng h·ª£p l·ªá.")
								return nil
							end

							return longestName
						end


						local EggAmount = 70
							local eggID = find_hashed_egg()
							if eggID then
								local args = {
									[1] = eggID,
									[2] = EggAmount
								}

								local success, result = pcall(function()
									return game:GetService("ReplicatedStorage").Network.CustomEggs_Hatch:InvokeServer(unpack(args))
								end)

								if not success then
									warn("L·ªói khi g·ªçi Hatch:", result)
								end
							end
							  




		  
      
        end	
		
	end


end)	


-- ƒëua th·ªùi gian map 249
task.spawn(function()
task.wait(70)

local player = game.Players.LocalPlayer
local Save = require(game.ReplicatedStorage.Library.Client.Save)
local TimeTrials = require(game.ReplicatedStorage.Library.Types.TimeTrials)

local function teleportSequence(player, sequence)
    for _, cframe in ipairs(sequence) do
        local character = player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            character.HumanoidRootPart.CFrame = cframe
            task.wait(0.3)
        else
            ----rconsoleprint("Character or HumanoidRootPart not found during teleport\n")
            break
        end
    end
end

local initialTeleport = CFrame.new(-14224 , 16.5 , 443)
local finalTeleport = CFrame.new(-18438, 16.71, -569)

local teleportSequence1 = {
    CFrame.new(-18368, 16.71, -553),
    CFrame.new(-18304, 16.71, -697),
    CFrame.new(-18092, 16.71, -662),
    CFrame.new(-18075, 16.71, -487),
    CFrame.new(-18219, 16.71, -454),
}

local teleportSequence2 = {
    CFrame.new(-18222, 16.71, -602)
}

local function getDuration()
    local saveData = Save.Get()
    if not saveData then
        --rconsoleprint("Loi: Khong lay duoc du lieu save\n")
        return nil
    end

    local timeTrialStats = saveData.TimeTrialStats
    if not timeTrialStats then
        --rconsoleprint("Khong tim thay TimeTrialStats trong du lieu save\n")
        return nil
    end

    local totalRuns = timeTrialStats.TotalRuns or timeTrialStats.RemainingRuns or 0
    --rconsoleprint("So lan Total Runs: " .. tostring(totalRuns) .. "\n")

    if totalRuns >= 10 then
        --rconsoleprint("TotalRuns >= 10, dung thuc hien teleport\n")
        return nil
    end

    local goalIndex = timeTrialStats.GoalIndex or 1
    local duration = nil
    local goal = TimeTrials.Goals[goalIndex]

    if not goal or not goal.Reward then
        duration = 260
    else
        local amount = nil
        local success, result = pcall(function()
            return goal.Reward:GetAmount()
        end)
        if success then
            amount = result
        end

        if typeof(amount) == "number" and math.floor(amount) == amount then
            duration = 120
        else
            duration = 260
        end
    end
    --rconsoleprint("Duration duoc dat la: " .. tostring(duration) .. "\n")
    return duration
end

local function main()
    while true do
        local duration = getDuration()
        if not duration or duration <= 0 then
            --rconsoleprint("Duration <= 0 hoac khong hop le, ket thuc vong lap\n")
            break
        end

        local character = player.Character
        if not (character and character:FindFirstChild("HumanoidRootPart")) then
            --rconsoleprint("Character or HumanoidRootPart not found, aborting\n")
            break
        end

        -- D·ªãch chuy·ªÉn ƒë·∫øn v·ªã tr√≠ ban ƒë·∫ßu
        character.HumanoidRootPart.CFrame = initialTeleport
        task.wait(8)

        local startTime = tick()
        while tick() - startTime < duration do
            teleportSequence(player, teleportSequence1)
            task.wait(0.1)
        end

        teleportSequence(player, teleportSequence2)
        task.wait(8)

        -- D·ªãch chuy·ªÉn ƒë·∫øn v·ªã tr√≠ cu·ªëi c√πng
        character.HumanoidRootPart.CFrame = finalTeleport
        task.wait(20)

        --rconsoleprint("Hoan thanh sequence teleport, lap lai...\n")
    end
end

-- G·ªçi h√†m main b·∫Øt ƒë·∫ßu ch·∫°y
main()

end)


-- nang update

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
while not player do
	task.wait(1)
	player = Players.LocalPlayer
end

-- üì¶ Remote
local Upgrades_Purchase = ReplicatedStorage.Network:WaitForChild("Upgrades_Purchase")

-- üå´Ô∏è ·∫®n to√†n b·ªô map
local function hideMap()
	for _, obj in ipairs(Workspace:GetDescendants()) do
		if obj:IsA("BasePart") then
			obj.Transparency = 1
			obj.CastShadow = false
		elseif obj:IsA("Decal") or obj:IsA("Texture") then
			obj.Transparency = 1
		end
	end
end

-- üß≠ Teleport
local function runSequence(teleportPositions)
	for _, pos in ipairs(teleportPositions) do
		local character = player.Character or player.CharacterAdded:Wait()
		local rootPart = character:WaitForChild("HumanoidRootPart")
		rootPart.CFrame = CFrame.new(pos)
	end
end

-- üß© Upgrade map
local function update_map(loai_update, map_co_update)
	Upgrades_Purchase:InvokeServer(loai_update, map_co_update)
end

local function BAM_E_UPDATE()
	local VirtualInputManager = game:GetService("VirtualInputManager")
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
    task.wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
	task.wait(0.5)
end

-- ‚öôÔ∏è Thi·∫øt l·∫≠p ban ƒë·∫ßu
setfpscap(15)
hideMap()

if game.PlaceId == 140403681187145 and RunService:IsRunning() then
	task.wait(2)
	
	runSequence({Vector3.new(-15484.5, 20, -404.5)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Tap Damage", "Flora Falls")
	

	runSequence({Vector3.new(-14856.5, 20, -408.5)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Drops", "Windmill Point")	
	

	runSequence({Vector3.new(-14261.3, 20, 193)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Coins", "Runestone Bluff")
	

	runSequence({Vector3.new(-14679, 20, 505.5)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Speed", "Runestone Bluff")

	-- üåç D·ªãch chuy·ªÉn ƒë·∫øn World3
	task.wait(2)
game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("World3Teleport"):InvokeServer()
end

if game.PlaceId == 17503543197 and RunService:IsRunning() then
	task.wait(2)
	
	runSequence({Vector3.new(-2235.2, 20, -8536)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Coins", "Prison Yard")

	runSequence({Vector3.new(-3714.8, 524, -13087.7)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Damage", "Tiki Island")

	runSequence({Vector3.new(-2997, 199, -22065)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Luck", "Hacker Lab")

	runSequence({Vector3.new(1011.6, 17, -14337)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Tap Damage", "Stone Forts")

	runSequence({Vector3.new(1011, 17, -36338.7)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Drops", "Kawaii Village")

	runSequence({Vector3.new(1011, 17, -24983.7)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Diamonds", "Rocky Ridge")

	-- üåç D·ªãch chuy·ªÉn ƒë·∫øn World2
	task.wait(2)
game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("World2Teleport"):InvokeServer()
end

if game.PlaceId == 16498369169 then

	runSequence({Vector3.new(-9817.5, 20, -416.6)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Tap Damage", "Tech Spawn")

	-- Area 108: Luck
	runSequence({Vector3.new(-8551, 20, -413)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Luck", "Data Tree Farm")

	-- Area 115: Drops
	runSequence({Vector3.new(-8806, 20, 302)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Drops", "Cyber Cove")

	-- Area 123: Diamonds
	runSequence({Vector3.new(-9945, 128.7, 643)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Diamonds", "Forcefield Mine")

	-- Area 128: Ultimate XP
	runSequence({Vector3.new(-9195, 18, 972)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Ultimates", "Nexus")

	-- Area 134: Pet Speed
	runSequence({Vector3.new(-8725, 18.4, 1545)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Speed", "Rocky Planet")

	-- Area 141: Coins
	runSequence({Vector3.new(-9175, 18.5, 2298)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Coins", "Mutated Forest")

	-- Area 148: Pet Damage
	runSequence({Vector3.new(-10283, 17.8, 2300)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Damage", "UFO Forest")

	-- Area 159: Luck
	runSequence({Vector3.new(-9753, 17.5, 3016)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Luck", "Mothership Circuit Board")

	-- Area 168: Tap Damage
	runSequence({Vector3.new(-10953, 18.3, 3313)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Tap Damage", "Cyberpunk Road")

	-- Area 181: Drops
	runSequence({Vector3.new(-10214, 18.5, 4059)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Drops", "Dark Tech Ruins")

	-- Area 189: Ultimate XP
	runSequence({Vector3.new(-10785, 18.5, 4636)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Ultimates", "Glitch Forest")

	-- Area 198: Diamonds
	runSequence({Vector3.new(-11037.4, 17.6, 5778.6)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Diamonds", "Void Fracture")
 

  
  
game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("World1Teleport"):InvokeServer() 
end

if game.PlaceId == 8737899170 then
    task.wait(2)

	runSequence({Vector3.new(438.4, 19.8, -234)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Walkspeed", "Colorful Forest")

	runSequence({Vector3.new(595.5, 19.8, -238)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Magnet", "Castle")

	runSequence({Vector3.new(755.1, 20, -237)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Diamonds", "Green Forest")

	runSequence({Vector3.new(789, 20, 54)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Walkspeed", "Cherry Blossom")

	runSequence({Vector3.new(468, 20, 55)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Tap Damage", "Backyard")

	runSequence({Vector3.new(243, 20, 134)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Diamonds", "Mine")

	runSequence({Vector3.new(441, 20, 237)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Speed", "Dead Forest")

	runSequence({Vector3.new(756, 20, 233)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Magnet", "Mushroom Field")

	runSequence({Vector3.new(794, 20, 527)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Drops", "Crimson Forest")

	runSequence({Vector3.new(465, 20, 530)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Damage", "Jungle Temple")

	runSequence({Vector3.new(250, 20, 556)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Diamonds", "Beach")

	runSequence({Vector3.new(439, -30, 751)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Luck", "Shipwreck")

	runSequence({Vector3.new(873, 20, 753)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Magnet", "Palm Beach")

	runSequence({Vector3.new(912, 20, 1047)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Coins", "Pirate Cove")

	runSequence({Vector3.new(600, 20, 1048)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Tap Damage", "Shanty Town")

	runSequence({Vector3.new(388, 20, 1120)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Speed", "Fossil Digsite")

	runSequence({Vector3.new(727, 20, 1225)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Diamonds", "Wild West")

	runSequence({Vector3.new(1151, 20, 1361)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Damage", "Mountains")

	runSequence({Vector3.new(695, 20, 1600)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Coins", "Ski Town")

	runSequence({Vector3.new(1178, 20, 1700)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Drops", "Obsidian Cave")

	runSequence({Vector3.new(1446, 20, 1993)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Magnet", "Underworld Bridge")

	runSequence({Vector3.new(1189, 20, 2149)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Luck", "Metal Dojo")

	runSequence({Vector3.new(667, 20, 2148)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Damage", "Samurai Village")

	runSequence({Vector3.new(349, 20, 2151)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Tap Damage", "Zen Garden")

	runSequence({Vector3.new(287, 20, 2535)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Speed", "Fairytale Castle")

	runSequence({Vector3.new(482, 20, 2634)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Luck", "Fairy Castle")

	runSequence({Vector3.new(798, 20, 2635)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Coins", "Rainbow River")

	runSequence({Vector3.new(1239, 20, 2766)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Magnet", "Frost Mountains")

	runSequence({Vector3.new(1152, 20, 3246)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Diamonds", "Ice Castle")

	runSequence({Vector3.new(828, 20, 3249)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Drops", "Firefly Cold Forest")

	runSequence({Vector3.new(288, 20, 3631)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Tap Damage", "Witch Marsh")

	runSequence({Vector3.new(637, 20, 3710)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Luck", "Haunted Mansion")

	runSequence({Vector3.new(1097, -31, 4002)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Magnet", "Treasure Dungeon")

	runSequence({Vector3.new(512, 20, 4320)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Coins", "Gummy Forest")

	runSequence({Vector3.new(-38, 20, 4392)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Speed", "Carnival")

	runSequence({Vector3.new(-35, 120, 5390)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Pet Damage", "Cloud Houses")

	runSequence({Vector3.new(-35, 120, 6184)})
	task.wait(2)
	BAM_E_UPDATE() 
 update_map("Diamonds", "Colorful Clouds")

	runSequence({Vector3.new(530, 26, -272)})
	
	

local ReplicatedStorage = game:GetService("ReplicatedStorage")	
local GuildCastle_UnlockGate = ReplicatedStorage.Network.GuildCastle_UnlockGate
GuildCastle_UnlockGate:InvokeServer()

end

