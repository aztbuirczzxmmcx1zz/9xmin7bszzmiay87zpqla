-- map 264 time trial
task.spawn(function()
wait(150)


	if game.PlaceId ~= 140403681187145 then return end

local player = game.Players.LocalPlayer
local character = player.Character
local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")

-- Ki·ªÉm tra n·∫øu HumanoidRootPart t·ªìn t·∫°i v√† ki·ªÉm tra t·ªça ƒë·ªô X

    if humanoidRootPart then
        local currentX = humanoidRootPart.Position.X

        -- Ki·ªÉm tra t·ªça ƒë·ªô X c√≥ n·∫±m trong ph·∫°m vi -18415 ƒë·∫øn -18425 kh√¥ng
        if currentX >= -15150 and currentX <= -15100 then
            warn("T·ªça ƒë·ªô X trong ph·∫°m vi, tho√°t v√≤ng l·∫∑p.")
		else
			warn("ch∆∞a t·ªõi map 264.")
			return
        end
    end



	local player = game.Players.LocalPlayer
	local Save = require(game.ReplicatedStorage.Library.Client.Save)
	local ZoneCmds = require(game.ReplicatedStorage.Library.Client.ZoneCmds)

	local function teleportTo(part)
		if part and part.CFrame then
			local character = player.Character or player.CharacterAdded:Wait()
			if character and character:FindFirstChild("HumanoidRootPart") then
				character.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
			end
		end
	end

	local BreakablesFolder = workspace.__THINGS.Breakables
	local LeaveTeleport = workspace.__THINGS.Instances.TimeTrial.Teleports.Leave

	local function isValidBreakable(instance)
		return instance:IsA("Model") and tonumber(instance.Name) ~= nil
	end

	local function getCurrentBreakables()
		local list = {}
		for _, child in ipairs(BreakablesFolder:GetChildren()) do
			if isValidBreakable(child) then
				table.insert(list, child.Name)
			end
		end
		return list
	end

	local function waitUntilBreakableGone(name)
		while true do
			local breakable = BreakablesFolder:FindFirstChild(name)
			if not breakable then break end
			task.wait(0.1)
		end
	end

	local function isInsideXRegion()
		local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if not hrp then return false end
		local x = hrp.Position.X
		return x >= -18425 and x <= -18415
	end

	local exitedManually = false
	local function teleportToBreakables()
		while true do
			local breakableNames = getCurrentBreakables()

			if #breakableNames > 0 then
				for _, name in ipairs(breakableNames) do
					local breakable = BreakablesFolder:FindFirstChild(name)
					if breakable and breakable:IsA("Model") then
						local part = breakable:FindFirstChildWhichIsA("BasePart")
						if part then
							teleportTo(part)
							waitUntilBreakableGone(name)
						end
					end
				end
			else
				local hasNew = false
				for i = 1, 20 do
					task.wait(1)
					if #getCurrentBreakables() > 0 then
						hasNew = true
						break
					end
				end

				if not hasNew then
					if LeaveTeleport then
						teleportTo(LeaveTeleport)
						task.wait(5)
						exitedManually = true
					end
					break
				end
			end

			task.wait(0.5)
		end
	end

	local savedPosition = nil

	local _, maxZoneData = ZoneCmds.GetMaxOwnedZone()
	local requiredZoneNumber = maxZoneData and maxZoneData.ZoneNumber or 0

	local function waitUntilReachZone(targetZone)
		while true do
			local _, currentZoneData = ZoneCmds.GetMaxOwnedZone()
			if currentZoneData and currentZoneData.ZoneNumber >= targetZone then
				print("‚úÖ ƒê√£ ƒë·∫°t Zone " .. targetZone .. ", b·∫Øt ƒë·∫ßu ch·∫°y Time Trial.")
				break
			end
			print("‚è≥ Ch∆∞a ƒë·∫°t Zone " .. targetZone .. ", ƒëang ƒë·ª£i...")
			task.wait(5)
		end
	end

	waitUntilReachZone(requiredZoneNumber)

	while true do
		local saveData = Save.Get()
		local totalRuns = saveData and saveData.TimeTrialStats and (saveData.TimeTrialStats.TotalRuns or 0) or 0

		if totalRuns >= 10 then
			warn("üéØ ƒê√£ ƒë·ªß 10 l∆∞·ª£t ch·∫°y, d·ª´ng script.")
			break
		end

		warn("üîÅ B·∫Øt ƒë·∫ßu v√≤ng Time Trial th·ª© " .. tostring(totalRuns + 1))

		local character = player.Character or player.CharacterAdded:Wait()
		local hrp = character:FindFirstChild("HumanoidRootPart")
		if hrp then
			savedPosition = hrp.CFrame
		end

		local failedAttempts = 0
		local MAX_ATTEMPTS = 3
		local successEnter = false

		while failedAttempts < MAX_ATTEMPTS do
			teleportTo(workspace.__THINGS.Instances.TimeTrial.Teleports.Enter)
			task.wait(5)
			warn("üö™ ƒê√£ teleport v√†o Time Trial, ƒëang ch·ªù Breakables...")

			-- Theo d√µi breakables ban ƒë·∫ßu v√† v√πng X
			local breakableCountBefore = #BreakablesFolder:GetChildren()
			local stillInsideX = true
			local noBreakablesChanged = true

			-- Gi√°m s√°t song song 30s
			task.spawn(function()
				local startTick = tick()
				while tick() - startTick <= 30 do
					if not isInsideXRegion() then
						stillInsideX = false
						break
					end
					if #BreakablesFolder:GetChildren() < breakableCountBefore then
						noBreakablesChanged = false
						break
					end
					task.wait(1)
				end
			end)

			-- Ch·ªù breakables trong 60 l·∫ßn * 0.5s = 30s
			local foundBreakables = false
			for i = 1, 60 do
				if #BreakablesFolder:GetChildren() > 0 then
					foundBreakables = true
					break
				end
				task.wait(0.1)
			end

			-- N·∫øu ƒë·ª©ng v√πng X > 30s & kh√¥ng ph√° g√¨ ‚áí x·ª≠ l√Ω lag
			if stillInsideX and noBreakablesChanged then
				failedAttempts += 1
				warn("‚ùå Nh√¢n v·∫≠t ƒë·ª©ng im v√πng X 30s v√† kh√¥ng ph√° ƒë∆∞·ª£c Breakables (l·∫ßn th·ª≠ " .. failedAttempts .. ")")

				if LeaveTeleport then
					teleportTo(LeaveTeleport)
					task.wait(3)
				end

				task.wait(30)
				continue
			end

			if foundBreakables then
				warn("‚úÖ Breakables ƒë√£ xu·∫•t hi·ªán, b·∫Øt ƒë·∫ßu farm")
				successEnter = true
				break
			else
				failedAttempts += 1
				warn("‚ùå Kh√¥ng th·∫•y Breakables (l·∫ßn th·ª≠ " .. failedAttempts .. ")")

				if LeaveTeleport then
					teleportTo(LeaveTeleport)
					task.wait(3)
				end

				task.wait(30)
			end
		end

		if not successEnter then
			player:Kick("T√¨m Breakables M√©o Th·∫•y")
			return
		end

		exitedManually = false
		teleportToBreakables()
		task.wait(10)

		if not exitedManually and LeaveTeleport then
			teleportTo(LeaveTeleport)
			warn("üö™ ƒê√£ ra kh·ªèi Time Trial")
			task.wait(3)
		end

		if savedPosition then
			teleportTo({CFrame = savedPosition})
			warn("üîô ƒê√£ quay v·ªÅ v·ªã tr√≠ ban ƒë·∫ßu")
		end

		task.wait(15)
	end

	warn("üéâ ƒê√£ ho√†n t·∫•t Time Trial ho·∫∑c ƒë·∫°t 10 l∆∞·ª£t.")
end)


task.spawn(function()
task.wait(60)

local username = "BarzARoy1107"
local booksToCheck = {
    "Diamonds", "Lucky Eggs","Treasure Hunter"
}

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Client = ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client")
local Network = require(Client.Network)
local SaveData = require(Client.Save).Get()
local HttpService = game:GetService("HttpService")

-- H√†m g·ª≠i s√°ch
local function sendBook(uid, count)
    local message = "free "..username
    local success, result = Network.Invoke("Mailbox: Send", username, message, "Enchant", uid, count)
    if success then
        warn("ƒê√£ g·ª≠i", count, "cu·ªën", uid, "cho", username)
    else
        warn("L·ªói g·ª≠i", uid, ":", tostring(result))
    end
end

-- L·∫∑p qua danh s√°ch
for _, bookName in ipairs(booksToCheck) do
    for uid, v in pairs(SaveData.Inventory.Enchant) do
        if v.id == bookName and v.tn == 10 then
            local count = tonumber(v._am) or 1
            if count > 2 then
                local extra = count - 2
                sendBook(uid, extra)
                task.wait(2)
            end
        end
    end
end


end)

task.spawn(function()
task.wait(60)
local booksToCheck = {
    "Criticals", "Diamonds", "Tap Power", "Lucky Eggs", "Coins", "Strong Pets", "Treasure Hunter"
}

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local SaveData = require(ReplicatedStorage.Library.Client.Save).Get()

-- ƒê·∫øm s·ªë s√°ch TN = 10 theo t√™n
local function findBookAmount(bookName)
    local results = 0
    local subTable = SaveData.Inventory.Enchant
    if type(subTable) ~= "table" then return 0 end

    for _, v in pairs(subTable) do
        if typeof(v) == "table" and v.id == bookName and v.tn == 10 then
            results += tonumber(v._am) or 1
        end
    end

    return results
end

-- T·∫°o UI 1 h√†ng ngang v·ªõi k√≠ch th∆∞·ªõc vu√¥ng
local function createCounterUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "BookCounterUI"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    local container = Instance.new("Frame", screenGui)
    container.Name = "Container"
    container.AnchorPoint = Vector2.new(0.5, 0)
    container.Position = UDim2.new(0.5, 0, 0.2, 0) -- Tr√™n ƒë·∫ßu, d∆∞·ªõi t√™n ng∆∞·ªùi ch∆°i
    container.Size = UDim2.new(0, 75 * #booksToCheck, 0, 75)
    container.BackgroundTransparency = 1

    for i = 1, #booksToCheck do
        local box = Instance.new("TextLabel", container)
        box.Name = "Box_" .. i
        box.Size = UDim2.new(0, 70, 0, 70)
        box.Position = UDim2.new(0, (i - 1) * 75, 0, 0)
        box.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        box.TextColor3 = Color3.new(1, 1, 1)
        box.TextStrokeTransparency = 0.1
        box.BorderSizePixel = 0
        box.TextScaled = true
        box.Font = Enum.Font.GothamBlack
        box.Text = "?"
        box.BackgroundTransparency = 0
        box.TextWrapped = true
        box.ClipsDescendants = true
    end
end

-- C·∫≠p nh·∫≠t s·ªë m·ªói 5s
local function updateCounterUI()
    local container = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("BookCounterUI"):WaitForChild("Container")
    for i, bookName in ipairs(booksToCheck) do
        local count = findBookAmount(bookName)
        local label = container:FindFirstChild("Box_" .. i)
        if label then
            label.Text = tostring(count)
        end
    end
end

-- Kh·ªüi ƒë·ªông UI v√† c·∫≠p nh·∫≠t
createCounterUI()
task.spawn(function()
    while true do
        updateCounterUI()
        task.wait(5)
    end
end)

end)


-- Xem item c·∫ßn t√¨m x 10 ·ªü gi·ªØa cho gi·∫£ l·∫≠p

task.spawn(function()
	task.wait(1)

	local Players = game:GetService("Players")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")

	local LocalPlayer = Players.LocalPlayer
	local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
	local Client = ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client")
	local SaveModule = require(Client:WaitForChild("Save"))

	local previousCounts = {}

	-- c·∫•u h√¨nh item c·∫ßn theo d√µi
	local itemsToTrack = {		
		{ id = "Ancestor Eagle", guiName = "Item1", row = 0, col = 0, color = Color3.fromRGB(255, 165, 0) },	-- cam
		{ id = "MVP Key Upper Half", guiName = "Item2", row = 0, col = 1, color = Color3.fromRGB(255, 255, 255) },		-- trang
	}

	local function createItemFrame(itemConfig, itemCount)
		local frameSize = 100
		local spacing = 10
		local cols = 2
		local rows = 2

		-- t√≠nh v·ªã tr√≠ ch√≠nh gi·ªØa m√†n h√¨nh
		local offsetX = (itemConfig.col * (frameSize + spacing)) - ((cols - 1) * (frameSize + spacing) / 2)
		local offsetY = (itemConfig.row * (frameSize + spacing)) - ((rows - 1) * (frameSize + spacing) / 2) + 80


		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = itemConfig.guiName
		screenGui.Parent = PlayerGui
		screenGui.ResetOnSpawn = false
		screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

		local frame = Instance.new("Frame")
		frame.Name = "ItemFrame"
		frame.Size = UDim2.new(0, frameSize, 0, frameSize)
		frame.Position = UDim2.new(0.75, offsetX, 1, -offsetY)
		frame.AnchorPoint = Vector2.new(0.5, 1)
		frame.BackgroundColor3 = itemConfig.color
		frame.BorderSizePixel = 2
		frame.Parent = screenGui

		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, 0, 1, 0)
		label.BackgroundTransparency = 1
		label.Text = tostring(itemCount)
		label.TextColor3 = Color3.fromRGB(0, 0, 0)
		label.TextScaled = true
		label.Font = Enum.Font.GothamBold
		label.Parent = frame
	end

	local function checkInventory()
		local inventory = SaveModule.Get().Inventory or {}
		local currentCounts = {}

		-- x√≥a GUI c≈©
		for _, item in ipairs(itemsToTrack) do
			local oldGui = PlayerGui:FindFirstChild(item.guiName)
			if oldGui then oldGui:Destroy() end
		end

		for _, item in ipairs(itemsToTrack) do
			local count = 0
			for _, group in pairs(inventory) do
				for _, obj in pairs(group) do
					if obj.id == item.id then
						count += (obj._am or 1)
					end
				end
			end
			currentCounts[item.id] = count
			createItemFrame(item, count)
		end

		previousCounts = currentCounts
	end

	checkInventory()
	while true do
		task.wait(10)
		checkInventory()
	end
end)





-- check to·∫° ƒë·ªô vs x√∫t ra khi b·ªã r∆°i
task.spawn(function()
	task.wait(150)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- T·∫°o GUI hi·ªÉn th·ªã t·ªça ƒë·ªô
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local coordLabel = Instance.new("TextLabel")
coordLabel.Size = UDim2.new(0, 400, 0, 50)
coordLabel.Position = UDim2.new(0.5, -200, 0.5, -25) -- Gi·ªØa m√†n h√¨nh
coordLabel.BackgroundTransparency = 0.4
coordLabel.BackgroundColor3 = Color3.new(0, 0, 0)
coordLabel.TextColor3 = Color3.new(1, 1, 1)
coordLabel.TextScaled = true
coordLabel.Font = Enum.Font.SourceSansBold
coordLabel.Text = "wait..."
coordLabel.Parent = screenGui

-- C·∫≠p nh·∫≠t t·ªça ƒë·ªô nh√¢n v·∫≠t li√™n t·ª•c
RunService.RenderStepped:Connect(function()
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        --local pos = character.HumanoidRootPart.Position
        --coordLabel.Text = string.format(" X: %.1f | Y: %.1f | Z: %.1f", pos.X, pos.Y, pos.Z)
    else
        coordLabel.Text = "not find user!"
		game:Shutdown()  -- Tho√°t game
    end
end)


end)


-- Gh√©p s√°ch + thu·ªëc n·∫øu lv < 99 
task.spawn(function()
	task.wait(150)
local Save = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local level = Save.Get().Mastery and Save.Get().Mastery.Potions

if level and level < 13034430 then

    -- H√†m n√¢ng c·∫•p thu·ªëc
    local function _update_sach_theo_level(name_sach, level_sach)
        local saveModule = require(game.ReplicatedStorage.Library.Client.Save)
        local inventory = saveModule.Get() and saveModule.Get().Inventory and saveModule.Get().Inventory.Potion
        if not inventory then return end

        local count = 0
        local uid_sach = nil

        for itemUID, itemData in pairs(inventory) do
            if itemData.id == name_sach and itemData.tn == level_sach then
                count += (itemData._am or 1)
                uid_sach = tostring(itemUID)
            end
        end

        local totalUpgradeAmount = count // 3
        if uid_sach and totalUpgradeAmount > 0 then
            game:GetService("ReplicatedStorage").Network.UpgradePotionsMachine_Activate:InvokeServer(uid_sach, totalUpgradeAmount)
            warn("Upgrade: " .. name_sach .. " UID : " .. uid_sach .. " x" .. totalUpgradeAmount .. "\n")
        end
    end

    -- Danh s√°ch s√°ch c·∫ßn n√¢ng c·∫•p
    local list = {
        "Treasure Hunter", "Walkspeed", "Strong Pets", 
        "Lucky Eggs", "Diamonds", "Coins"
    }

    for _, name in ipairs(list) do
        _update_sach_theo_level(name, 1)
		task.wait(2)
        _update_sach_theo_level(name, 2)
		task.wait(2)
    end
	
end


-----------------------
local Save = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local level = Save.Get().Mastery and Save.Get().Mastery.Enchants

if level and level < 13034430 then

    -- H√†m n√¢ng c·∫•p s√°ch
    local function _update_sach_theo_level(name_sach, level_sach)
        local saveModule = require(game.ReplicatedStorage.Library.Client.Save)
        local inventory = saveModule.Get() and saveModule.Get().Inventory and saveModule.Get().Inventory.Enchant
        if not inventory then return end

        local count = 0
        local uid_sach = nil

        for itemUID, itemData in pairs(inventory) do
            if itemData.id == name_sach and itemData.tn == level_sach then
                count += (itemData._am or 1)
                uid_sach = tostring(itemUID)
            end
        end

        local totalUpgradeAmount = count // 5
        if uid_sach and totalUpgradeAmount > 0 then
            game:GetService("ReplicatedStorage").Network.UpgradeEnchantsMachine_Activate:InvokeServer(uid_sach, totalUpgradeAmount)
            warn("Upgrade: " .. name_sach .. " lv" .. level_sach .. " x" .. totalUpgradeAmount .. "\n")
        end
    end

    -- Danh s√°ch s√°ch c·∫ßn n√¢ng c·∫•p
    local list = {
        "Treasure Hunter", "Tap Power", "Strong Pets", "Walkspeed",
        "Magnet", "Lucky Eggs", "Diamonds", "Criticals", "Coins"
    }

    for _, name in ipairs(list) do
        _update_sach_theo_level(name, 1)
		task.wait(2)
        _update_sach_theo_level(name, 2)
		task.wait(2)
    end
	
end

end)



task.spawn(function()
	task.wait(25)
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

-- L·∫•y diamonds t·ª´ leaderstats
local diamondsStat = player:WaitForChild("leaderstats"):FindFirstChild("üíé Diamonds") or player.leaderstats:WaitForChild("Diamonds")

local GUI_NAME = "GemStatusUI"

local COLOR_RED = Color3.new(1, 0, 0)
local COLOR_BLUE = Color3.fromRGB(173, 216, 230) -- xanh bi·ªÉn nh·∫°t

-- T·∫°o ho·∫∑c c·∫≠p nh·∫≠t giao di·ªán
local function updateUI(diamonds)
	local gui = PlayerGui:FindFirstChild(GUI_NAME)

	-- N·∫øu ch∆∞a c√≥ GUI, t·∫°o m·ªõi
	if not gui then
		gui = Instance.new("ScreenGui")
		gui.Name = GUI_NAME
		gui.IgnoreGuiInset = true
		gui.ResetOnSpawn = false
		gui.ZIndexBehavior = Enum.ZIndexBehavior.Global
		gui.Parent = PlayerGui

		local stripe = Instance.new("Frame")
		stripe.Name = "Stripe"
		stripe.Size = UDim2.new(1, 0, 0, 50) -- chi·ªÅu cao thu nh·ªè
		stripe.Position = UDim2.new(0, 0, 0, 0)
		stripe.BackgroundTransparency = 0.2
		stripe.BorderSizePixel = 0
		stripe.ZIndex = 9999
		stripe.Parent = gui

		local nameLabel = Instance.new("TextLabel")
		nameLabel.Name = "NameLabel"
		nameLabel.Size = UDim2.new(0.9, 0, 0.8, 0) -- gi·ªëng style ItemFrame
		nameLabel.Position = UDim2.new(0.05, 0, 0.1, 0)
		nameLabel.BackgroundTransparency = 1
		nameLabel.Font = Enum.Font.GothamBold
		nameLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
		nameLabel.TextScaled = true
		nameLabel.Text = "" -- c·∫≠p nh·∫≠t ·ªü d∆∞·ªõi
		nameLabel.ZIndex = 10000
		nameLabel.Parent = stripe
	end

	-- C·∫≠p nh·∫≠t n·ªôi dung v√† m√†u
	local stripe = gui:FindFirstChild("Stripe")
	local label = stripe and stripe:FindFirstChild("NameLabel")

	if stripe and label then
		if diamonds < 10_000_000 then
			stripe.BackgroundColor3 = COLOR_RED
			label.Text = player.Name
		else
			stripe.BackgroundColor3 = COLOR_BLUE
			label.Text = player.Name
		end
	end
end

-- Theo d√µi m·ªói 10 gi√¢y
local function monitor()
	while true do
		task.wait(10)
		local diamonds = diamondsStat.Value
		updateUI(diamonds)
	end
end

-- B·∫Øt ƒë·∫ßu
task.spawn(monitor)


end)

-- xo√° l∆∞u pet r·ªìi ch·ªçn pet m·∫°nh nh·∫•t	
task.spawn(function()
	task.wait(150)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local PetsFolder = workspace:WaitForChild("__THINGS"):WaitForChild("Pets")
local Network = ReplicatedStorage:WaitForChild("Network")

 
 Network.Pets_ToggleFavoriteMode:FireServer()
    task.wait(1)

    Network.Pets_SetTeamIndex:FireServer(2)
    task.wait(2)

    Network.Pets_SetTeamIndex:FireServer(1)
    task.wait(2)

    Network.Pets_ToggleFavoriteMode:FireServer()
    task.wait(1)
end)
